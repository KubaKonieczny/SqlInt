Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     query -> update
Rule 3     query -> insert
Rule 4     query -> delete
Rule 5     update -> UPDATE table SET column = expression
Rule 6     update -> UPDATE table SET column = expression WHERE conlist
Rule 7     insert -> INSERT INTO table VALUES LPAR expressions RPAR
Rule 8     insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR
Rule 9     delete -> DELETE FROM tables
Rule 10    delete -> DELETE FROM tables WHERE conlist
Rule 11    select -> SELECT columns FROM tables WHERE conlist ORDER BY columns
Rule 12    select -> SELECT columns FROM tables WHERE conlist
Rule 13    select -> SELECT columns FROM tables ORDER BY columns
Rule 14    select -> SELECT columns FROM tables
Rule 15    select -> SELECT expression
Rule 16    select -> SELECT expression FROM tables
Rule 17    columns -> columns COMMA column
Rule 18    columns -> column
Rule 19    column -> *
Rule 20    column -> TEXT
Rule 21    column -> TEXT DOT TEXT
Rule 22    aggregate -> SUM LPAR TEXT RPAR
Rule 23    aggregate -> AVG LPAR TEXT RPAR
Rule 24    aggregate -> MAX LPAR TEXT RPAR
Rule 25    aggregate -> MIN LPAR TEXT RPAR
Rule 26    aggregate -> COUNT LPAR TEXT RPAR
Rule 27    tables -> table
Rule 28    tables -> tables COMMA table
Rule 29    table -> TEXT
Rule 30    table -> TEXT AS TEXT
Rule 31    conlist -> condition
Rule 32    conlist -> NOT condition
Rule 33    conlist -> condition AND condition
Rule 34    conlist -> condition OR condition
Rule 35    conlist -> TEXT BETWEEN number AND number
Rule 36    conlist -> TEXT IN LPAR select RPAR
Rule 37    texts -> TEXT
Rule 38    texts -> texts TEXT
Rule 39    value -> number
Rule 40    value -> aggregate
Rule 41    value -> PUNCTUATION texts PUNCTUATION
Rule 42    condition -> column > value
Rule 43    condition -> column < value
Rule 44    condition -> column = value
Rule 45    condition -> column > column
Rule 46    condition -> column < column
Rule 47    condition -> column = column
Rule 48    number -> int
Rule 49    number -> double
Rule 50    int -> INTEGER
Rule 51    double -> DOUBLE
Rule 52    expressions -> expressions COMMA expression
Rule 53    expressions -> expression
Rule 54    expression -> expression + value
Rule 55    expression -> expression - value
Rule 56    expression -> value

Terminals, with rules where they appear

*                    : 19
+                    : 54
-                    : 55
<                    : 43 46
=                    : 5 6 44 47
>                    : 42 45
AND                  : 33 35
AS                   : 30
AVG                  : 23
BETWEEN              : 35
BY                   : 11 13
COMMA                : 17 28 52
COUNT                : 26
DELETE               : 9 10
DOT                  : 21
DOUBLE               : 51
FROM                 : 9 10 11 12 13 14 16
IN                   : 36
INSERT               : 7 8
INTEGER              : 50
INTO                 : 7 8
LPAR                 : 7 8 8 22 23 24 25 26 36
MAX                  : 24
MIN                  : 25
NOT                  : 32
OR                   : 34
ORDER                : 11 13
PUNCTUATION          : 41 41
RPAR                 : 7 8 8 22 23 24 25 26 36
SELECT               : 11 12 13 14 15 16
SET                  : 5 6
SUM                  : 22
TEXT                 : 20 21 21 22 23 24 25 26 29 30 30 35 36 37 38
UPDATE               : 5 6
VALUES               : 7 8
WHERE                : 6 10 11 12
error                : 

Nonterminals, with rules where they appear

aggregate            : 40
column               : 5 6 17 18 42 43 44 45 45 46 46 47 47
columns              : 8 11 11 12 13 13 14 17
condition            : 31 32 33 33 34 34
conlist              : 6 10 11 12
delete               : 4
double               : 49
expression           : 5 6 15 16 52 53 54 55
expressions          : 7 8 52
insert               : 3
int                  : 48
number               : 35 35 39
query                : 0
select               : 1 36
table                : 5 6 7 8 27 28
tables               : 9 10 11 12 13 14 16 28
texts                : 38 41
update               : 2
value                : 42 43 44 54 55 56

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) query -> . update
    (3) query -> . insert
    (4) query -> . delete
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist
    (13) select -> . SELECT columns FROM tables ORDER BY columns
    (14) select -> . SELECT columns FROM tables
    (15) select -> . SELECT expression
    (16) select -> . SELECT expression FROM tables
    (5) update -> . UPDATE table SET column = expression
    (6) update -> . UPDATE table SET column = expression WHERE conlist
    (7) insert -> . INSERT INTO table VALUES LPAR expressions RPAR
    (8) insert -> . INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR
    (9) delete -> . DELETE FROM tables
    (10) delete -> . DELETE FROM tables WHERE conlist

    SELECT          shift and go to state 6
    UPDATE          shift and go to state 7
    INSERT          shift and go to state 8
    DELETE          shift and go to state 9

    query                          shift and go to state 1
    select                         shift and go to state 2
    update                         shift and go to state 3
    insert                         shift and go to state 4
    delete                         shift and go to state 5

state 1

    (0) S' -> query .



state 2

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)


state 3

    (2) query -> update .

    $end            reduce using rule 2 (query -> update .)


state 4

    (3) query -> insert .

    $end            reduce using rule 3 (query -> insert .)


state 5

    (4) query -> delete .

    $end            reduce using rule 4 (query -> delete .)


state 6

    (11) select -> SELECT . columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT . columns FROM tables WHERE conlist
    (13) select -> SELECT . columns FROM tables ORDER BY columns
    (14) select -> SELECT . columns FROM tables
    (15) select -> SELECT . expression
    (16) select -> SELECT . expression FROM tables
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (54) expression -> . expression + value
    (55) expression -> . expression - value
    (56) expression -> . value
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    *               shift and go to state 14
    TEXT            shift and go to state 15
    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    columns                        shift and go to state 10
    expression                     shift and go to state 11
    column                         shift and go to state 12
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 7

    (5) update -> UPDATE . table SET column = expression
    (6) update -> UPDATE . table SET column = expression WHERE conlist
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    table                          shift and go to state 28

state 8

    (7) insert -> INSERT . INTO table VALUES LPAR expressions RPAR
    (8) insert -> INSERT . INTO table LPAR columns RPAR VALUES LPAR expressions RPAR

    INTO            shift and go to state 30


state 9

    (9) delete -> DELETE . FROM tables
    (10) delete -> DELETE . FROM tables WHERE conlist

    FROM            shift and go to state 31


state 10

    (11) select -> SELECT columns . FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns . FROM tables WHERE conlist
    (13) select -> SELECT columns . FROM tables ORDER BY columns
    (14) select -> SELECT columns . FROM tables
    (17) columns -> columns . COMMA column

    FROM            shift and go to state 32
    COMMA           shift and go to state 33


state 11

    (15) select -> SELECT expression .
    (16) select -> SELECT expression . FROM tables
    (54) expression -> expression . + value
    (55) expression -> expression . - value

    $end            reduce using rule 15 (select -> SELECT expression .)
    RPAR            reduce using rule 15 (select -> SELECT expression .)
    FROM            shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 36


state 12

    (18) columns -> column .

    FROM            reduce using rule 18 (columns -> column .)
    COMMA           reduce using rule 18 (columns -> column .)
    RPAR            reduce using rule 18 (columns -> column .)
    $end            reduce using rule 18 (columns -> column .)


state 13

    (56) expression -> value .

    FROM            reduce using rule 56 (expression -> value .)
    +               reduce using rule 56 (expression -> value .)
    -               reduce using rule 56 (expression -> value .)
    $end            reduce using rule 56 (expression -> value .)
    RPAR            reduce using rule 56 (expression -> value .)
    WHERE           reduce using rule 56 (expression -> value .)
    COMMA           reduce using rule 56 (expression -> value .)


state 14

    (19) column -> * .

    FROM            reduce using rule 19 (column -> * .)
    COMMA           reduce using rule 19 (column -> * .)
    RPAR            reduce using rule 19 (column -> * .)
    $end            reduce using rule 19 (column -> * .)
    =               reduce using rule 19 (column -> * .)
    >               reduce using rule 19 (column -> * .)
    <               reduce using rule 19 (column -> * .)
    AND             reduce using rule 19 (column -> * .)
    OR              reduce using rule 19 (column -> * .)
    ORDER           reduce using rule 19 (column -> * .)


state 15

    (20) column -> TEXT .
    (21) column -> TEXT . DOT TEXT

    FROM            reduce using rule 20 (column -> TEXT .)
    COMMA           reduce using rule 20 (column -> TEXT .)
    RPAR            reduce using rule 20 (column -> TEXT .)
    $end            reduce using rule 20 (column -> TEXT .)
    =               reduce using rule 20 (column -> TEXT .)
    >               reduce using rule 20 (column -> TEXT .)
    <               reduce using rule 20 (column -> TEXT .)
    AND             reduce using rule 20 (column -> TEXT .)
    OR              reduce using rule 20 (column -> TEXT .)
    ORDER           reduce using rule 20 (column -> TEXT .)
    DOT             shift and go to state 37


state 16

    (39) value -> number .

    FROM            reduce using rule 39 (value -> number .)
    +               reduce using rule 39 (value -> number .)
    -               reduce using rule 39 (value -> number .)
    $end            reduce using rule 39 (value -> number .)
    RPAR            reduce using rule 39 (value -> number .)
    WHERE           reduce using rule 39 (value -> number .)
    COMMA           reduce using rule 39 (value -> number .)
    AND             reduce using rule 39 (value -> number .)
    OR              reduce using rule 39 (value -> number .)
    ORDER           reduce using rule 39 (value -> number .)


state 17

    (40) value -> aggregate .

    FROM            reduce using rule 40 (value -> aggregate .)
    +               reduce using rule 40 (value -> aggregate .)
    -               reduce using rule 40 (value -> aggregate .)
    $end            reduce using rule 40 (value -> aggregate .)
    RPAR            reduce using rule 40 (value -> aggregate .)
    WHERE           reduce using rule 40 (value -> aggregate .)
    COMMA           reduce using rule 40 (value -> aggregate .)
    AND             reduce using rule 40 (value -> aggregate .)
    OR              reduce using rule 40 (value -> aggregate .)
    ORDER           reduce using rule 40 (value -> aggregate .)


state 18

    (41) value -> PUNCTUATION . texts PUNCTUATION
    (37) texts -> . TEXT
    (38) texts -> . texts TEXT

    TEXT            shift and go to state 39

    texts                          shift and go to state 38

state 19

    (48) number -> int .

    FROM            reduce using rule 48 (number -> int .)
    +               reduce using rule 48 (number -> int .)
    -               reduce using rule 48 (number -> int .)
    $end            reduce using rule 48 (number -> int .)
    RPAR            reduce using rule 48 (number -> int .)
    WHERE           reduce using rule 48 (number -> int .)
    COMMA           reduce using rule 48 (number -> int .)
    AND             reduce using rule 48 (number -> int .)
    OR              reduce using rule 48 (number -> int .)
    ORDER           reduce using rule 48 (number -> int .)


state 20

    (49) number -> double .

    FROM            reduce using rule 49 (number -> double .)
    +               reduce using rule 49 (number -> double .)
    -               reduce using rule 49 (number -> double .)
    $end            reduce using rule 49 (number -> double .)
    RPAR            reduce using rule 49 (number -> double .)
    WHERE           reduce using rule 49 (number -> double .)
    COMMA           reduce using rule 49 (number -> double .)
    AND             reduce using rule 49 (number -> double .)
    OR              reduce using rule 49 (number -> double .)
    ORDER           reduce using rule 49 (number -> double .)


state 21

    (22) aggregate -> SUM . LPAR TEXT RPAR

    LPAR            shift and go to state 40


state 22

    (23) aggregate -> AVG . LPAR TEXT RPAR

    LPAR            shift and go to state 41


state 23

    (24) aggregate -> MAX . LPAR TEXT RPAR

    LPAR            shift and go to state 42


state 24

    (25) aggregate -> MIN . LPAR TEXT RPAR

    LPAR            shift and go to state 43


state 25

    (26) aggregate -> COUNT . LPAR TEXT RPAR

    LPAR            shift and go to state 44


state 26

    (50) int -> INTEGER .

    FROM            reduce using rule 50 (int -> INTEGER .)
    +               reduce using rule 50 (int -> INTEGER .)
    -               reduce using rule 50 (int -> INTEGER .)
    $end            reduce using rule 50 (int -> INTEGER .)
    RPAR            reduce using rule 50 (int -> INTEGER .)
    WHERE           reduce using rule 50 (int -> INTEGER .)
    COMMA           reduce using rule 50 (int -> INTEGER .)
    AND             reduce using rule 50 (int -> INTEGER .)
    OR              reduce using rule 50 (int -> INTEGER .)
    ORDER           reduce using rule 50 (int -> INTEGER .)


state 27

    (51) double -> DOUBLE .

    FROM            reduce using rule 51 (double -> DOUBLE .)
    +               reduce using rule 51 (double -> DOUBLE .)
    -               reduce using rule 51 (double -> DOUBLE .)
    $end            reduce using rule 51 (double -> DOUBLE .)
    RPAR            reduce using rule 51 (double -> DOUBLE .)
    WHERE           reduce using rule 51 (double -> DOUBLE .)
    COMMA           reduce using rule 51 (double -> DOUBLE .)
    AND             reduce using rule 51 (double -> DOUBLE .)
    OR              reduce using rule 51 (double -> DOUBLE .)
    ORDER           reduce using rule 51 (double -> DOUBLE .)


state 28

    (5) update -> UPDATE table . SET column = expression
    (6) update -> UPDATE table . SET column = expression WHERE conlist

    SET             shift and go to state 45


state 29

    (29) table -> TEXT .
    (30) table -> TEXT . AS TEXT

    SET             reduce using rule 29 (table -> TEXT .)
    VALUES          reduce using rule 29 (table -> TEXT .)
    LPAR            reduce using rule 29 (table -> TEXT .)
    WHERE           reduce using rule 29 (table -> TEXT .)
    COMMA           reduce using rule 29 (table -> TEXT .)
    $end            reduce using rule 29 (table -> TEXT .)
    ORDER           reduce using rule 29 (table -> TEXT .)
    RPAR            reduce using rule 29 (table -> TEXT .)
    AS              shift and go to state 46


state 30

    (7) insert -> INSERT INTO . table VALUES LPAR expressions RPAR
    (8) insert -> INSERT INTO . table LPAR columns RPAR VALUES LPAR expressions RPAR
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    table                          shift and go to state 47

state 31

    (9) delete -> DELETE FROM . tables
    (10) delete -> DELETE FROM . tables WHERE conlist
    (27) tables -> . table
    (28) tables -> . tables COMMA table
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    tables                         shift and go to state 48
    table                          shift and go to state 49

state 32

    (11) select -> SELECT columns FROM . tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM . tables WHERE conlist
    (13) select -> SELECT columns FROM . tables ORDER BY columns
    (14) select -> SELECT columns FROM . tables
    (27) tables -> . table
    (28) tables -> . tables COMMA table
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    tables                         shift and go to state 50
    table                          shift and go to state 49

state 33

    (17) columns -> columns COMMA . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    column                         shift and go to state 51

state 34

    (16) select -> SELECT expression FROM . tables
    (27) tables -> . table
    (28) tables -> . tables COMMA table
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    tables                         shift and go to state 52
    table                          shift and go to state 49

state 35

    (54) expression -> expression + . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    value                          shift and go to state 53
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 36

    (55) expression -> expression - . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    value                          shift and go to state 54
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 37

    (21) column -> TEXT DOT . TEXT

    TEXT            shift and go to state 55


state 38

    (41) value -> PUNCTUATION texts . PUNCTUATION
    (38) texts -> texts . TEXT

    PUNCTUATION     shift and go to state 56
    TEXT            shift and go to state 57


state 39

    (37) texts -> TEXT .

    PUNCTUATION     reduce using rule 37 (texts -> TEXT .)
    TEXT            reduce using rule 37 (texts -> TEXT .)


state 40

    (22) aggregate -> SUM LPAR . TEXT RPAR

    TEXT            shift and go to state 58


state 41

    (23) aggregate -> AVG LPAR . TEXT RPAR

    TEXT            shift and go to state 59


state 42

    (24) aggregate -> MAX LPAR . TEXT RPAR

    TEXT            shift and go to state 60


state 43

    (25) aggregate -> MIN LPAR . TEXT RPAR

    TEXT            shift and go to state 61


state 44

    (26) aggregate -> COUNT LPAR . TEXT RPAR

    TEXT            shift and go to state 62


state 45

    (5) update -> UPDATE table SET . column = expression
    (6) update -> UPDATE table SET . column = expression WHERE conlist
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    column                         shift and go to state 63

state 46

    (30) table -> TEXT AS . TEXT

    TEXT            shift and go to state 64


state 47

    (7) insert -> INSERT INTO table . VALUES LPAR expressions RPAR
    (8) insert -> INSERT INTO table . LPAR columns RPAR VALUES LPAR expressions RPAR

    VALUES          shift and go to state 65
    LPAR            shift and go to state 66


state 48

    (9) delete -> DELETE FROM tables .
    (10) delete -> DELETE FROM tables . WHERE conlist
    (28) tables -> tables . COMMA table

    $end            reduce using rule 9 (delete -> DELETE FROM tables .)
    WHERE           shift and go to state 67
    COMMA           shift and go to state 68


state 49

    (27) tables -> table .

    WHERE           reduce using rule 27 (tables -> table .)
    COMMA           reduce using rule 27 (tables -> table .)
    $end            reduce using rule 27 (tables -> table .)
    ORDER           reduce using rule 27 (tables -> table .)
    RPAR            reduce using rule 27 (tables -> table .)


state 50

    (11) select -> SELECT columns FROM tables . WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables . WHERE conlist
    (13) select -> SELECT columns FROM tables . ORDER BY columns
    (14) select -> SELECT columns FROM tables .
    (28) tables -> tables . COMMA table

    WHERE           shift and go to state 69
    ORDER           shift and go to state 70
    $end            reduce using rule 14 (select -> SELECT columns FROM tables .)
    RPAR            reduce using rule 14 (select -> SELECT columns FROM tables .)
    COMMA           shift and go to state 68


state 51

    (17) columns -> columns COMMA column .

    FROM            reduce using rule 17 (columns -> columns COMMA column .)
    COMMA           reduce using rule 17 (columns -> columns COMMA column .)
    RPAR            reduce using rule 17 (columns -> columns COMMA column .)
    $end            reduce using rule 17 (columns -> columns COMMA column .)


state 52

    (16) select -> SELECT expression FROM tables .
    (28) tables -> tables . COMMA table

    $end            reduce using rule 16 (select -> SELECT expression FROM tables .)
    RPAR            reduce using rule 16 (select -> SELECT expression FROM tables .)
    COMMA           shift and go to state 68


state 53

    (54) expression -> expression + value .

    FROM            reduce using rule 54 (expression -> expression + value .)
    +               reduce using rule 54 (expression -> expression + value .)
    -               reduce using rule 54 (expression -> expression + value .)
    $end            reduce using rule 54 (expression -> expression + value .)
    RPAR            reduce using rule 54 (expression -> expression + value .)
    WHERE           reduce using rule 54 (expression -> expression + value .)
    COMMA           reduce using rule 54 (expression -> expression + value .)


state 54

    (55) expression -> expression - value .

    FROM            reduce using rule 55 (expression -> expression - value .)
    +               reduce using rule 55 (expression -> expression - value .)
    -               reduce using rule 55 (expression -> expression - value .)
    $end            reduce using rule 55 (expression -> expression - value .)
    RPAR            reduce using rule 55 (expression -> expression - value .)
    WHERE           reduce using rule 55 (expression -> expression - value .)
    COMMA           reduce using rule 55 (expression -> expression - value .)


state 55

    (21) column -> TEXT DOT TEXT .

    FROM            reduce using rule 21 (column -> TEXT DOT TEXT .)
    COMMA           reduce using rule 21 (column -> TEXT DOT TEXT .)
    RPAR            reduce using rule 21 (column -> TEXT DOT TEXT .)
    $end            reduce using rule 21 (column -> TEXT DOT TEXT .)
    =               reduce using rule 21 (column -> TEXT DOT TEXT .)
    >               reduce using rule 21 (column -> TEXT DOT TEXT .)
    <               reduce using rule 21 (column -> TEXT DOT TEXT .)
    AND             reduce using rule 21 (column -> TEXT DOT TEXT .)
    OR              reduce using rule 21 (column -> TEXT DOT TEXT .)
    ORDER           reduce using rule 21 (column -> TEXT DOT TEXT .)


state 56

    (41) value -> PUNCTUATION texts PUNCTUATION .

    FROM            reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    +               reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    -               reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    $end            reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    RPAR            reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    WHERE           reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    COMMA           reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    AND             reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    OR              reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)
    ORDER           reduce using rule 41 (value -> PUNCTUATION texts PUNCTUATION .)


state 57

    (38) texts -> texts TEXT .

    PUNCTUATION     reduce using rule 38 (texts -> texts TEXT .)
    TEXT            reduce using rule 38 (texts -> texts TEXT .)


state 58

    (22) aggregate -> SUM LPAR TEXT . RPAR

    RPAR            shift and go to state 71


state 59

    (23) aggregate -> AVG LPAR TEXT . RPAR

    RPAR            shift and go to state 72


state 60

    (24) aggregate -> MAX LPAR TEXT . RPAR

    RPAR            shift and go to state 73


state 61

    (25) aggregate -> MIN LPAR TEXT . RPAR

    RPAR            shift and go to state 74


state 62

    (26) aggregate -> COUNT LPAR TEXT . RPAR

    RPAR            shift and go to state 75


state 63

    (5) update -> UPDATE table SET column . = expression
    (6) update -> UPDATE table SET column . = expression WHERE conlist

    =               shift and go to state 76


state 64

    (30) table -> TEXT AS TEXT .

    SET             reduce using rule 30 (table -> TEXT AS TEXT .)
    VALUES          reduce using rule 30 (table -> TEXT AS TEXT .)
    LPAR            reduce using rule 30 (table -> TEXT AS TEXT .)
    WHERE           reduce using rule 30 (table -> TEXT AS TEXT .)
    COMMA           reduce using rule 30 (table -> TEXT AS TEXT .)
    $end            reduce using rule 30 (table -> TEXT AS TEXT .)
    ORDER           reduce using rule 30 (table -> TEXT AS TEXT .)
    RPAR            reduce using rule 30 (table -> TEXT AS TEXT .)


state 65

    (7) insert -> INSERT INTO table VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 77


state 66

    (8) insert -> INSERT INTO table LPAR . columns RPAR VALUES LPAR expressions RPAR
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 78
    column                         shift and go to state 12

state 67

    (10) delete -> DELETE FROM tables WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 81
    TEXT            shift and go to state 82
    *               shift and go to state 14

    conlist                        shift and go to state 79
    condition                      shift and go to state 80
    column                         shift and go to state 83

state 68

    (28) tables -> tables COMMA . table
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 29

    table                          shift and go to state 84

state 69

    (11) select -> SELECT columns FROM tables WHERE . conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 81
    TEXT            shift and go to state 82
    *               shift and go to state 14

    conlist                        shift and go to state 85
    condition                      shift and go to state 80
    column                         shift and go to state 83

state 70

    (13) select -> SELECT columns FROM tables ORDER . BY columns

    BY              shift and go to state 86


state 71

    (22) aggregate -> SUM LPAR TEXT RPAR .

    FROM            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    +               reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    -               reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    $end            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    RPAR            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    WHERE           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    COMMA           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    AND             reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    OR              reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    ORDER           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)


state 72

    (23) aggregate -> AVG LPAR TEXT RPAR .

    FROM            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    +               reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    -               reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    $end            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    RPAR            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    WHERE           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    COMMA           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    AND             reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    OR              reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    ORDER           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)


state 73

    (24) aggregate -> MAX LPAR TEXT RPAR .

    FROM            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    +               reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    -               reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    $end            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    RPAR            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    WHERE           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    COMMA           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    AND             reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    OR              reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    ORDER           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)


state 74

    (25) aggregate -> MIN LPAR TEXT RPAR .

    FROM            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    +               reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    -               reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    $end            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    RPAR            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    WHERE           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    COMMA           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    AND             reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    OR              reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    ORDER           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)


state 75

    (26) aggregate -> COUNT LPAR TEXT RPAR .

    FROM            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    +               reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    -               reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    $end            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    RPAR            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    WHERE           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    COMMA           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    AND             reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    OR              reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    ORDER           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)


state 76

    (5) update -> UPDATE table SET column = . expression
    (6) update -> UPDATE table SET column = . expression WHERE conlist
    (54) expression -> . expression + value
    (55) expression -> . expression - value
    (56) expression -> . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    expression                     shift and go to state 87
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 77

    (7) insert -> INSERT INTO table VALUES LPAR . expressions RPAR
    (52) expressions -> . expressions COMMA expression
    (53) expressions -> . expression
    (54) expression -> . expression + value
    (55) expression -> . expression - value
    (56) expression -> . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    expressions                    shift and go to state 88
    expression                     shift and go to state 89
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 78

    (8) insert -> INSERT INTO table LPAR columns . RPAR VALUES LPAR expressions RPAR
    (17) columns -> columns . COMMA column

    RPAR            shift and go to state 90
    COMMA           shift and go to state 33


state 79

    (10) delete -> DELETE FROM tables WHERE conlist .

    $end            reduce using rule 10 (delete -> DELETE FROM tables WHERE conlist .)


state 80

    (31) conlist -> condition .
    (33) conlist -> condition . AND condition
    (34) conlist -> condition . OR condition

    $end            reduce using rule 31 (conlist -> condition .)
    ORDER           reduce using rule 31 (conlist -> condition .)
    RPAR            reduce using rule 31 (conlist -> condition .)
    AND             shift and go to state 91
    OR              shift and go to state 92


state 81

    (32) conlist -> NOT . condition
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 93
    column                         shift and go to state 83

state 82

    (35) conlist -> TEXT . BETWEEN number AND number
    (36) conlist -> TEXT . IN LPAR select RPAR
    (20) column -> TEXT .
    (21) column -> TEXT . DOT TEXT

    BETWEEN         shift and go to state 94
    IN              shift and go to state 95
    >               reduce using rule 20 (column -> TEXT .)
    <               reduce using rule 20 (column -> TEXT .)
    =               reduce using rule 20 (column -> TEXT .)
    DOT             shift and go to state 37


state 83

    (42) condition -> column . > value
    (43) condition -> column . < value
    (44) condition -> column . = value
    (45) condition -> column . > column
    (46) condition -> column . < column
    (47) condition -> column . = column

    >               shift and go to state 96
    <               shift and go to state 97
    =               shift and go to state 98


state 84

    (28) tables -> tables COMMA table .

    WHERE           reduce using rule 28 (tables -> tables COMMA table .)
    COMMA           reduce using rule 28 (tables -> tables COMMA table .)
    $end            reduce using rule 28 (tables -> tables COMMA table .)
    ORDER           reduce using rule 28 (tables -> tables COMMA table .)
    RPAR            reduce using rule 28 (tables -> tables COMMA table .)


state 85

    (11) select -> SELECT columns FROM tables WHERE conlist . ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE conlist .

    ORDER           shift and go to state 99
    $end            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist .)
    RPAR            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist .)


state 86

    (13) select -> SELECT columns FROM tables ORDER BY . columns
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 100
    column                         shift and go to state 12

state 87

    (5) update -> UPDATE table SET column = expression .
    (6) update -> UPDATE table SET column = expression . WHERE conlist
    (54) expression -> expression . + value
    (55) expression -> expression . - value

    $end            reduce using rule 5 (update -> UPDATE table SET column = expression .)
    WHERE           shift and go to state 101
    +               shift and go to state 35
    -               shift and go to state 36


state 88

    (7) insert -> INSERT INTO table VALUES LPAR expressions . RPAR
    (52) expressions -> expressions . COMMA expression

    RPAR            shift and go to state 102
    COMMA           shift and go to state 103


state 89

    (53) expressions -> expression .
    (54) expression -> expression . + value
    (55) expression -> expression . - value

    RPAR            reduce using rule 53 (expressions -> expression .)
    COMMA           reduce using rule 53 (expressions -> expression .)
    +               shift and go to state 35
    -               shift and go to state 36


state 90

    (8) insert -> INSERT INTO table LPAR columns RPAR . VALUES LPAR expressions RPAR

    VALUES          shift and go to state 104


state 91

    (33) conlist -> condition AND . condition
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 105
    column                         shift and go to state 83

state 92

    (34) conlist -> condition OR . condition
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 106
    column                         shift and go to state 83

state 93

    (32) conlist -> NOT condition .

    $end            reduce using rule 32 (conlist -> NOT condition .)
    ORDER           reduce using rule 32 (conlist -> NOT condition .)
    RPAR            reduce using rule 32 (conlist -> NOT condition .)


state 94

    (35) conlist -> TEXT BETWEEN . number AND number
    (48) number -> . int
    (49) number -> . double
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    number                         shift and go to state 107
    int                            shift and go to state 19
    double                         shift and go to state 20

state 95

    (36) conlist -> TEXT IN . LPAR select RPAR

    LPAR            shift and go to state 108


state 96

    (42) condition -> column > . value
    (45) condition -> column > . column
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    column                         shift and go to state 109
    value                          shift and go to state 110
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 97

    (43) condition -> column < . value
    (46) condition -> column < . column
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    column                         shift and go to state 111
    value                          shift and go to state 112
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 98

    (44) condition -> column = . value
    (47) condition -> column = . column
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    column                         shift and go to state 113
    value                          shift and go to state 114
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 99

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER . BY columns

    BY              shift and go to state 115


state 100

    (13) select -> SELECT columns FROM tables ORDER BY columns .
    (17) columns -> columns . COMMA column

    $end            reduce using rule 13 (select -> SELECT columns FROM tables ORDER BY columns .)
    RPAR            reduce using rule 13 (select -> SELECT columns FROM tables ORDER BY columns .)
    COMMA           shift and go to state 33


state 101

    (6) update -> UPDATE table SET column = expression WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (42) condition -> . column > value
    (43) condition -> . column < value
    (44) condition -> . column = value
    (45) condition -> . column > column
    (46) condition -> . column < column
    (47) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 81
    TEXT            shift and go to state 82
    *               shift and go to state 14

    column                         shift and go to state 83
    conlist                        shift and go to state 116
    condition                      shift and go to state 80

state 102

    (7) insert -> INSERT INTO table VALUES LPAR expressions RPAR .

    $end            reduce using rule 7 (insert -> INSERT INTO table VALUES LPAR expressions RPAR .)


state 103

    (52) expressions -> expressions COMMA . expression
    (54) expression -> . expression + value
    (55) expression -> . expression - value
    (56) expression -> . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    expression                     shift and go to state 117
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 104

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 118


state 105

    (33) conlist -> condition AND condition .

    $end            reduce using rule 33 (conlist -> condition AND condition .)
    ORDER           reduce using rule 33 (conlist -> condition AND condition .)
    RPAR            reduce using rule 33 (conlist -> condition AND condition .)


state 106

    (34) conlist -> condition OR condition .

    $end            reduce using rule 34 (conlist -> condition OR condition .)
    ORDER           reduce using rule 34 (conlist -> condition OR condition .)
    RPAR            reduce using rule 34 (conlist -> condition OR condition .)


state 107

    (35) conlist -> TEXT BETWEEN number . AND number

    AND             shift and go to state 119


state 108

    (36) conlist -> TEXT IN LPAR . select RPAR
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist
    (13) select -> . SELECT columns FROM tables ORDER BY columns
    (14) select -> . SELECT columns FROM tables
    (15) select -> . SELECT expression
    (16) select -> . SELECT expression FROM tables

    SELECT          shift and go to state 6

    select                         shift and go to state 120

state 109

    (45) condition -> column > column .

    AND             reduce using rule 45 (condition -> column > column .)
    OR              reduce using rule 45 (condition -> column > column .)
    $end            reduce using rule 45 (condition -> column > column .)
    ORDER           reduce using rule 45 (condition -> column > column .)
    RPAR            reduce using rule 45 (condition -> column > column .)


state 110

    (42) condition -> column > value .

    AND             reduce using rule 42 (condition -> column > value .)
    OR              reduce using rule 42 (condition -> column > value .)
    $end            reduce using rule 42 (condition -> column > value .)
    ORDER           reduce using rule 42 (condition -> column > value .)
    RPAR            reduce using rule 42 (condition -> column > value .)


state 111

    (46) condition -> column < column .

    AND             reduce using rule 46 (condition -> column < column .)
    OR              reduce using rule 46 (condition -> column < column .)
    $end            reduce using rule 46 (condition -> column < column .)
    ORDER           reduce using rule 46 (condition -> column < column .)
    RPAR            reduce using rule 46 (condition -> column < column .)


state 112

    (43) condition -> column < value .

    AND             reduce using rule 43 (condition -> column < value .)
    OR              reduce using rule 43 (condition -> column < value .)
    $end            reduce using rule 43 (condition -> column < value .)
    ORDER           reduce using rule 43 (condition -> column < value .)
    RPAR            reduce using rule 43 (condition -> column < value .)


state 113

    (47) condition -> column = column .

    AND             reduce using rule 47 (condition -> column = column .)
    OR              reduce using rule 47 (condition -> column = column .)
    $end            reduce using rule 47 (condition -> column = column .)
    ORDER           reduce using rule 47 (condition -> column = column .)
    RPAR            reduce using rule 47 (condition -> column = column .)


state 114

    (44) condition -> column = value .

    AND             reduce using rule 44 (condition -> column = value .)
    OR              reduce using rule 44 (condition -> column = value .)
    $end            reduce using rule 44 (condition -> column = value .)
    ORDER           reduce using rule 44 (condition -> column = value .)
    RPAR            reduce using rule 44 (condition -> column = value .)


state 115

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY . columns
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 121
    column                         shift and go to state 12

state 116

    (6) update -> UPDATE table SET column = expression WHERE conlist .

    $end            reduce using rule 6 (update -> UPDATE table SET column = expression WHERE conlist .)


state 117

    (52) expressions -> expressions COMMA expression .
    (54) expression -> expression . + value
    (55) expression -> expression . - value

    RPAR            reduce using rule 52 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 52 (expressions -> expressions COMMA expression .)
    +               shift and go to state 35
    -               shift and go to state 36


state 118

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR . expressions RPAR
    (52) expressions -> . expressions COMMA expression
    (53) expressions -> . expression
    (54) expression -> . expression + value
    (55) expression -> . expression - value
    (56) expression -> . value
    (39) value -> . number
    (40) value -> . aggregate
    (41) value -> . PUNCTUATION texts PUNCTUATION
    (48) number -> . int
    (49) number -> . double
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    PUNCTUATION     shift and go to state 18
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25
    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    expressions                    shift and go to state 122
    expression                     shift and go to state 89
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17
    int                            shift and go to state 19
    double                         shift and go to state 20

state 119

    (35) conlist -> TEXT BETWEEN number AND . number
    (48) number -> . int
    (49) number -> . double
    (50) int -> . INTEGER
    (51) double -> . DOUBLE

    INTEGER         shift and go to state 26
    DOUBLE          shift and go to state 27

    number                         shift and go to state 123
    int                            shift and go to state 19
    double                         shift and go to state 20

state 120

    (36) conlist -> TEXT IN LPAR select . RPAR

    RPAR            shift and go to state 124


state 121

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .
    (17) columns -> columns . COMMA column

    $end            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    RPAR            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    COMMA           shift and go to state 33


state 122

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions . RPAR
    (52) expressions -> expressions . COMMA expression

    RPAR            shift and go to state 125
    COMMA           shift and go to state 103


state 123

    (35) conlist -> TEXT BETWEEN number AND number .

    $end            reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)
    ORDER           reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)
    RPAR            reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)


state 124

    (36) conlist -> TEXT IN LPAR select RPAR .

    $end            reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)
    ORDER           reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)
    RPAR            reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)


state 125

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR .

    $end            reduce using rule 8 (insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR .)

