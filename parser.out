Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     query -> update
Rule 3     query -> insert
Rule 4     query -> delete
Rule 5     update -> UPDATE table SET column = expression
Rule 6     update -> UPDATE table SET column = expression WHERE conlist
Rule 7     insert -> INSERT table VALUES LPAR expressions RPAR
Rule 8     insert -> INSERT table LPAR columns RPAR VALUES LPAR expressions RPAR
Rule 9     delete -> DELETE FROM tables
Rule 10    delete -> DELETE FROM tables WHERE conlist
Rule 11    select -> SELECT columns FROM tables WHERE conlist ORDER BY columns
Rule 12    select -> SELECT columns FROM tables WHERE conlist
Rule 13    select -> SELECT columns FROM tables ORDER BY columns
Rule 14    select -> SELECT columns FROM tables
Rule 15    select -> SELECT expression
Rule 16    select -> SELECT expression FROM tables
Rule 17    columns -> columns COMMA column
Rule 18    columns -> column
Rule 19    column -> *
Rule 20    column -> TEXT
Rule 21    column -> TEXT DOT TEXT
Rule 22    aggregate -> SUM LPAR TEXT RPAR
Rule 23    aggregate -> AVG LPAR TEXT RPAR
Rule 24    aggregate -> MAX LPAR TEXT RPAR
Rule 25    aggregate -> MIN LPAR TEXT RPAR
Rule 26    aggregate -> COUNT LPAR TEXT RPAR
Rule 27    tables -> table
Rule 28    tables -> table COMMA tables
Rule 29    table -> TEXT
Rule 30    table -> TEXT AS TEXT
Rule 31    conlist -> condition
Rule 32    conlist -> NOT condition
Rule 33    conlist -> condition AND condition
Rule 34    conlist -> condition OR condition
Rule 35    conlist -> TEXT BETWEEN number AND number
Rule 36    conlist -> TEXT IN LPAR select RPAR
Rule 37    value -> number
Rule 38    value -> aggregate
Rule 39    value -> PUNCTUATION TEXT PUNCTUATION
Rule 40    condition -> column > value
Rule 41    condition -> column < value
Rule 42    condition -> column = value
Rule 43    condition -> column > column
Rule 44    condition -> column < column
Rule 45    condition -> column = column
Rule 46    number -> INTEGER
Rule 47    number -> DOUBLE
Rule 48    expressions -> expression COMMA expressions
Rule 49    expressions -> expression
Rule 50    expression -> expression + value
Rule 51    expression -> expression - value
Rule 52    expression -> value

Terminals, with rules where they appear

*                    : 19
+                    : 50
-                    : 51
<                    : 41 44
=                    : 5 6 42 45
>                    : 40 43
AND                  : 33 35
AS                   : 30
AVG                  : 23
BETWEEN              : 35
BY                   : 11 13
COMMA                : 17 28 48
COUNT                : 26
DELETE               : 9 10
DOT                  : 21
DOUBLE               : 47
FROM                 : 9 10 11 12 13 14 16
IN                   : 36
INSERT               : 7 8
INTEGER              : 46
LPAR                 : 7 8 8 22 23 24 25 26 36
MAX                  : 24
MIN                  : 25
NOT                  : 32
OR                   : 34
ORDER                : 11 13
PUNCTUATION          : 39 39
RPAR                 : 7 8 8 22 23 24 25 26 36
SELECT               : 11 12 13 14 15 16
SET                  : 5 6
SUM                  : 22
TEXT                 : 20 21 21 22 23 24 25 26 29 30 30 35 36 39
UPDATE               : 5 6
VALUES               : 7 8
WHERE                : 6 10 11 12
error                : 

Nonterminals, with rules where they appear

aggregate            : 38
column               : 5 6 17 18 40 41 42 43 43 44 44 45 45
columns              : 8 11 11 12 13 13 14 17
condition            : 31 32 33 33 34 34
conlist              : 6 10 11 12
delete               : 4
expression           : 5 6 15 16 48 49 50 51
expressions          : 7 8 48
insert               : 3
number               : 35 35 37
query                : 0
select               : 1 36
table                : 5 6 7 8 27 28
tables               : 9 10 11 12 13 14 16 28
update               : 2
value                : 40 41 42 50 51 52

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) query -> . update
    (3) query -> . insert
    (4) query -> . delete
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist
    (13) select -> . SELECT columns FROM tables ORDER BY columns
    (14) select -> . SELECT columns FROM tables
    (15) select -> . SELECT expression
    (16) select -> . SELECT expression FROM tables
    (5) update -> . UPDATE table SET column = expression
    (6) update -> . UPDATE table SET column = expression WHERE conlist
    (7) insert -> . INSERT table VALUES LPAR expressions RPAR
    (8) insert -> . INSERT table LPAR columns RPAR VALUES LPAR expressions RPAR
    (9) delete -> . DELETE FROM tables
    (10) delete -> . DELETE FROM tables WHERE conlist

    SELECT          shift and go to state 6
    UPDATE          shift and go to state 7
    INSERT          shift and go to state 8
    DELETE          shift and go to state 9

    query                          shift and go to state 1
    select                         shift and go to state 2
    update                         shift and go to state 3
    insert                         shift and go to state 4
    delete                         shift and go to state 5

state 1

    (0) S' -> query .



state 2

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)


state 3

    (2) query -> update .

    $end            reduce using rule 2 (query -> update .)


state 4

    (3) query -> insert .

    $end            reduce using rule 3 (query -> insert .)


state 5

    (4) query -> delete .

    $end            reduce using rule 4 (query -> delete .)


state 6

    (11) select -> SELECT . columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT . columns FROM tables WHERE conlist
    (13) select -> SELECT . columns FROM tables ORDER BY columns
    (14) select -> SELECT . columns FROM tables
    (15) select -> SELECT . expression
    (16) select -> SELECT . expression FROM tables
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (50) expression -> . expression + value
    (51) expression -> . expression - value
    (52) expression -> . value
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    *               shift and go to state 14
    TEXT            shift and go to state 15
    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    columns                        shift and go to state 10
    expression                     shift and go to state 11
    column                         shift and go to state 12
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 7

    (5) update -> UPDATE . table SET column = expression
    (6) update -> UPDATE . table SET column = expression WHERE conlist
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    table                          shift and go to state 26

state 8

    (7) insert -> INSERT . table VALUES LPAR expressions RPAR
    (8) insert -> INSERT . table LPAR columns RPAR VALUES LPAR expressions RPAR
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    table                          shift and go to state 28

state 9

    (9) delete -> DELETE . FROM tables
    (10) delete -> DELETE . FROM tables WHERE conlist

    FROM            shift and go to state 29


state 10

    (11) select -> SELECT columns . FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns . FROM tables WHERE conlist
    (13) select -> SELECT columns . FROM tables ORDER BY columns
    (14) select -> SELECT columns . FROM tables
    (17) columns -> columns . COMMA column

    FROM            shift and go to state 30
    COMMA           shift and go to state 31


state 11

    (15) select -> SELECT expression .
    (16) select -> SELECT expression . FROM tables
    (50) expression -> expression . + value
    (51) expression -> expression . - value

    $end            reduce using rule 15 (select -> SELECT expression .)
    RPAR            reduce using rule 15 (select -> SELECT expression .)
    FROM            shift and go to state 32
    +               shift and go to state 33
    -               shift and go to state 34


state 12

    (18) columns -> column .

    FROM            reduce using rule 18 (columns -> column .)
    COMMA           reduce using rule 18 (columns -> column .)
    RPAR            reduce using rule 18 (columns -> column .)
    $end            reduce using rule 18 (columns -> column .)


state 13

    (52) expression -> value .

    FROM            reduce using rule 52 (expression -> value .)
    +               reduce using rule 52 (expression -> value .)
    -               reduce using rule 52 (expression -> value .)
    $end            reduce using rule 52 (expression -> value .)
    RPAR            reduce using rule 52 (expression -> value .)
    COMMA           reduce using rule 52 (expression -> value .)
    WHERE           reduce using rule 52 (expression -> value .)


state 14

    (19) column -> * .

    FROM            reduce using rule 19 (column -> * .)
    COMMA           reduce using rule 19 (column -> * .)
    RPAR            reduce using rule 19 (column -> * .)
    $end            reduce using rule 19 (column -> * .)
    =               reduce using rule 19 (column -> * .)
    >               reduce using rule 19 (column -> * .)
    <               reduce using rule 19 (column -> * .)
    AND             reduce using rule 19 (column -> * .)
    OR              reduce using rule 19 (column -> * .)
    ORDER           reduce using rule 19 (column -> * .)


state 15

    (20) column -> TEXT .
    (21) column -> TEXT . DOT TEXT

    FROM            reduce using rule 20 (column -> TEXT .)
    COMMA           reduce using rule 20 (column -> TEXT .)
    RPAR            reduce using rule 20 (column -> TEXT .)
    $end            reduce using rule 20 (column -> TEXT .)
    =               reduce using rule 20 (column -> TEXT .)
    >               reduce using rule 20 (column -> TEXT .)
    <               reduce using rule 20 (column -> TEXT .)
    AND             reduce using rule 20 (column -> TEXT .)
    OR              reduce using rule 20 (column -> TEXT .)
    ORDER           reduce using rule 20 (column -> TEXT .)
    DOT             shift and go to state 35


state 16

    (37) value -> number .

    FROM            reduce using rule 37 (value -> number .)
    +               reduce using rule 37 (value -> number .)
    -               reduce using rule 37 (value -> number .)
    $end            reduce using rule 37 (value -> number .)
    RPAR            reduce using rule 37 (value -> number .)
    COMMA           reduce using rule 37 (value -> number .)
    WHERE           reduce using rule 37 (value -> number .)
    AND             reduce using rule 37 (value -> number .)
    OR              reduce using rule 37 (value -> number .)
    ORDER           reduce using rule 37 (value -> number .)


state 17

    (38) value -> aggregate .

    FROM            reduce using rule 38 (value -> aggregate .)
    +               reduce using rule 38 (value -> aggregate .)
    -               reduce using rule 38 (value -> aggregate .)
    $end            reduce using rule 38 (value -> aggregate .)
    RPAR            reduce using rule 38 (value -> aggregate .)
    COMMA           reduce using rule 38 (value -> aggregate .)
    WHERE           reduce using rule 38 (value -> aggregate .)
    AND             reduce using rule 38 (value -> aggregate .)
    OR              reduce using rule 38 (value -> aggregate .)
    ORDER           reduce using rule 38 (value -> aggregate .)


state 18

    (39) value -> PUNCTUATION . TEXT PUNCTUATION

    TEXT            shift and go to state 36


state 19

    (46) number -> INTEGER .

    FROM            reduce using rule 46 (number -> INTEGER .)
    +               reduce using rule 46 (number -> INTEGER .)
    -               reduce using rule 46 (number -> INTEGER .)
    $end            reduce using rule 46 (number -> INTEGER .)
    RPAR            reduce using rule 46 (number -> INTEGER .)
    COMMA           reduce using rule 46 (number -> INTEGER .)
    WHERE           reduce using rule 46 (number -> INTEGER .)
    AND             reduce using rule 46 (number -> INTEGER .)
    OR              reduce using rule 46 (number -> INTEGER .)
    ORDER           reduce using rule 46 (number -> INTEGER .)


state 20

    (47) number -> DOUBLE .

    FROM            reduce using rule 47 (number -> DOUBLE .)
    +               reduce using rule 47 (number -> DOUBLE .)
    -               reduce using rule 47 (number -> DOUBLE .)
    $end            reduce using rule 47 (number -> DOUBLE .)
    RPAR            reduce using rule 47 (number -> DOUBLE .)
    COMMA           reduce using rule 47 (number -> DOUBLE .)
    WHERE           reduce using rule 47 (number -> DOUBLE .)
    AND             reduce using rule 47 (number -> DOUBLE .)
    OR              reduce using rule 47 (number -> DOUBLE .)
    ORDER           reduce using rule 47 (number -> DOUBLE .)


state 21

    (22) aggregate -> SUM . LPAR TEXT RPAR

    LPAR            shift and go to state 37


state 22

    (23) aggregate -> AVG . LPAR TEXT RPAR

    LPAR            shift and go to state 38


state 23

    (24) aggregate -> MAX . LPAR TEXT RPAR

    LPAR            shift and go to state 39


state 24

    (25) aggregate -> MIN . LPAR TEXT RPAR

    LPAR            shift and go to state 40


state 25

    (26) aggregate -> COUNT . LPAR TEXT RPAR

    LPAR            shift and go to state 41


state 26

    (5) update -> UPDATE table . SET column = expression
    (6) update -> UPDATE table . SET column = expression WHERE conlist

    SET             shift and go to state 42


state 27

    (29) table -> TEXT .
    (30) table -> TEXT . AS TEXT

    SET             reduce using rule 29 (table -> TEXT .)
    VALUES          reduce using rule 29 (table -> TEXT .)
    LPAR            reduce using rule 29 (table -> TEXT .)
    COMMA           reduce using rule 29 (table -> TEXT .)
    WHERE           reduce using rule 29 (table -> TEXT .)
    $end            reduce using rule 29 (table -> TEXT .)
    ORDER           reduce using rule 29 (table -> TEXT .)
    RPAR            reduce using rule 29 (table -> TEXT .)
    AS              shift and go to state 43


state 28

    (7) insert -> INSERT table . VALUES LPAR expressions RPAR
    (8) insert -> INSERT table . LPAR columns RPAR VALUES LPAR expressions RPAR

    VALUES          shift and go to state 44
    LPAR            shift and go to state 45


state 29

    (9) delete -> DELETE FROM . tables
    (10) delete -> DELETE FROM . tables WHERE conlist
    (27) tables -> . table
    (28) tables -> . table COMMA tables
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    tables                         shift and go to state 46
    table                          shift and go to state 47

state 30

    (11) select -> SELECT columns FROM . tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM . tables WHERE conlist
    (13) select -> SELECT columns FROM . tables ORDER BY columns
    (14) select -> SELECT columns FROM . tables
    (27) tables -> . table
    (28) tables -> . table COMMA tables
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    tables                         shift and go to state 48
    table                          shift and go to state 47

state 31

    (17) columns -> columns COMMA . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    column                         shift and go to state 49

state 32

    (16) select -> SELECT expression FROM . tables
    (27) tables -> . table
    (28) tables -> . table COMMA tables
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    tables                         shift and go to state 50
    table                          shift and go to state 47

state 33

    (50) expression -> expression + . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    value                          shift and go to state 51
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 34

    (51) expression -> expression - . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    value                          shift and go to state 52
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 35

    (21) column -> TEXT DOT . TEXT

    TEXT            shift and go to state 53


state 36

    (39) value -> PUNCTUATION TEXT . PUNCTUATION

    PUNCTUATION     shift and go to state 54


state 37

    (22) aggregate -> SUM LPAR . TEXT RPAR

    TEXT            shift and go to state 55


state 38

    (23) aggregate -> AVG LPAR . TEXT RPAR

    TEXT            shift and go to state 56


state 39

    (24) aggregate -> MAX LPAR . TEXT RPAR

    TEXT            shift and go to state 57


state 40

    (25) aggregate -> MIN LPAR . TEXT RPAR

    TEXT            shift and go to state 58


state 41

    (26) aggregate -> COUNT LPAR . TEXT RPAR

    TEXT            shift and go to state 59


state 42

    (5) update -> UPDATE table SET . column = expression
    (6) update -> UPDATE table SET . column = expression WHERE conlist
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    column                         shift and go to state 60

state 43

    (30) table -> TEXT AS . TEXT

    TEXT            shift and go to state 61


state 44

    (7) insert -> INSERT table VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 62


state 45

    (8) insert -> INSERT table LPAR . columns RPAR VALUES LPAR expressions RPAR
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 63
    column                         shift and go to state 12

state 46

    (9) delete -> DELETE FROM tables .
    (10) delete -> DELETE FROM tables . WHERE conlist

    $end            reduce using rule 9 (delete -> DELETE FROM tables .)
    WHERE           shift and go to state 64


state 47

    (27) tables -> table .
    (28) tables -> table . COMMA tables

    WHERE           reduce using rule 27 (tables -> table .)
    $end            reduce using rule 27 (tables -> table .)
    ORDER           reduce using rule 27 (tables -> table .)
    RPAR            reduce using rule 27 (tables -> table .)
    COMMA           shift and go to state 65


state 48

    (11) select -> SELECT columns FROM tables . WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables . WHERE conlist
    (13) select -> SELECT columns FROM tables . ORDER BY columns
    (14) select -> SELECT columns FROM tables .

    WHERE           shift and go to state 66
    ORDER           shift and go to state 67
    $end            reduce using rule 14 (select -> SELECT columns FROM tables .)
    RPAR            reduce using rule 14 (select -> SELECT columns FROM tables .)


state 49

    (17) columns -> columns COMMA column .

    FROM            reduce using rule 17 (columns -> columns COMMA column .)
    COMMA           reduce using rule 17 (columns -> columns COMMA column .)
    RPAR            reduce using rule 17 (columns -> columns COMMA column .)
    $end            reduce using rule 17 (columns -> columns COMMA column .)


state 50

    (16) select -> SELECT expression FROM tables .

    $end            reduce using rule 16 (select -> SELECT expression FROM tables .)
    RPAR            reduce using rule 16 (select -> SELECT expression FROM tables .)


state 51

    (50) expression -> expression + value .

    FROM            reduce using rule 50 (expression -> expression + value .)
    +               reduce using rule 50 (expression -> expression + value .)
    -               reduce using rule 50 (expression -> expression + value .)
    $end            reduce using rule 50 (expression -> expression + value .)
    RPAR            reduce using rule 50 (expression -> expression + value .)
    COMMA           reduce using rule 50 (expression -> expression + value .)
    WHERE           reduce using rule 50 (expression -> expression + value .)


state 52

    (51) expression -> expression - value .

    FROM            reduce using rule 51 (expression -> expression - value .)
    +               reduce using rule 51 (expression -> expression - value .)
    -               reduce using rule 51 (expression -> expression - value .)
    $end            reduce using rule 51 (expression -> expression - value .)
    RPAR            reduce using rule 51 (expression -> expression - value .)
    COMMA           reduce using rule 51 (expression -> expression - value .)
    WHERE           reduce using rule 51 (expression -> expression - value .)


state 53

    (21) column -> TEXT DOT TEXT .

    FROM            reduce using rule 21 (column -> TEXT DOT TEXT .)
    COMMA           reduce using rule 21 (column -> TEXT DOT TEXT .)
    RPAR            reduce using rule 21 (column -> TEXT DOT TEXT .)
    $end            reduce using rule 21 (column -> TEXT DOT TEXT .)
    =               reduce using rule 21 (column -> TEXT DOT TEXT .)
    >               reduce using rule 21 (column -> TEXT DOT TEXT .)
    <               reduce using rule 21 (column -> TEXT DOT TEXT .)
    AND             reduce using rule 21 (column -> TEXT DOT TEXT .)
    OR              reduce using rule 21 (column -> TEXT DOT TEXT .)
    ORDER           reduce using rule 21 (column -> TEXT DOT TEXT .)


state 54

    (39) value -> PUNCTUATION TEXT PUNCTUATION .

    FROM            reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    +               reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    -               reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    $end            reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    RPAR            reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    COMMA           reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    WHERE           reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    AND             reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    OR              reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)
    ORDER           reduce using rule 39 (value -> PUNCTUATION TEXT PUNCTUATION .)


state 55

    (22) aggregate -> SUM LPAR TEXT . RPAR

    RPAR            shift and go to state 68


state 56

    (23) aggregate -> AVG LPAR TEXT . RPAR

    RPAR            shift and go to state 69


state 57

    (24) aggregate -> MAX LPAR TEXT . RPAR

    RPAR            shift and go to state 70


state 58

    (25) aggregate -> MIN LPAR TEXT . RPAR

    RPAR            shift and go to state 71


state 59

    (26) aggregate -> COUNT LPAR TEXT . RPAR

    RPAR            shift and go to state 72


state 60

    (5) update -> UPDATE table SET column . = expression
    (6) update -> UPDATE table SET column . = expression WHERE conlist

    =               shift and go to state 73


state 61

    (30) table -> TEXT AS TEXT .

    SET             reduce using rule 30 (table -> TEXT AS TEXT .)
    VALUES          reduce using rule 30 (table -> TEXT AS TEXT .)
    LPAR            reduce using rule 30 (table -> TEXT AS TEXT .)
    COMMA           reduce using rule 30 (table -> TEXT AS TEXT .)
    WHERE           reduce using rule 30 (table -> TEXT AS TEXT .)
    $end            reduce using rule 30 (table -> TEXT AS TEXT .)
    ORDER           reduce using rule 30 (table -> TEXT AS TEXT .)
    RPAR            reduce using rule 30 (table -> TEXT AS TEXT .)


state 62

    (7) insert -> INSERT table VALUES LPAR . expressions RPAR
    (48) expressions -> . expression COMMA expressions
    (49) expressions -> . expression
    (50) expression -> . expression + value
    (51) expression -> . expression - value
    (52) expression -> . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    expressions                    shift and go to state 74
    expression                     shift and go to state 75
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 63

    (8) insert -> INSERT table LPAR columns . RPAR VALUES LPAR expressions RPAR
    (17) columns -> columns . COMMA column

    RPAR            shift and go to state 76
    COMMA           shift and go to state 31


state 64

    (10) delete -> DELETE FROM tables WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 79
    TEXT            shift and go to state 80
    *               shift and go to state 14

    conlist                        shift and go to state 77
    condition                      shift and go to state 78
    column                         shift and go to state 81

state 65

    (28) tables -> table COMMA . tables
    (27) tables -> . table
    (28) tables -> . table COMMA tables
    (29) table -> . TEXT
    (30) table -> . TEXT AS TEXT

    TEXT            shift and go to state 27

    table                          shift and go to state 47
    tables                         shift and go to state 82

state 66

    (11) select -> SELECT columns FROM tables WHERE . conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 79
    TEXT            shift and go to state 80
    *               shift and go to state 14

    conlist                        shift and go to state 83
    condition                      shift and go to state 78
    column                         shift and go to state 81

state 67

    (13) select -> SELECT columns FROM tables ORDER . BY columns

    BY              shift and go to state 84


state 68

    (22) aggregate -> SUM LPAR TEXT RPAR .

    FROM            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    +               reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    -               reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    $end            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    RPAR            reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    COMMA           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    WHERE           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    AND             reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    OR              reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)
    ORDER           reduce using rule 22 (aggregate -> SUM LPAR TEXT RPAR .)


state 69

    (23) aggregate -> AVG LPAR TEXT RPAR .

    FROM            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    +               reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    -               reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    $end            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    RPAR            reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    COMMA           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    WHERE           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    AND             reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    OR              reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)
    ORDER           reduce using rule 23 (aggregate -> AVG LPAR TEXT RPAR .)


state 70

    (24) aggregate -> MAX LPAR TEXT RPAR .

    FROM            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    +               reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    -               reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    $end            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    RPAR            reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    COMMA           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    WHERE           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    AND             reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    OR              reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)
    ORDER           reduce using rule 24 (aggregate -> MAX LPAR TEXT RPAR .)


state 71

    (25) aggregate -> MIN LPAR TEXT RPAR .

    FROM            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    +               reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    -               reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    $end            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    RPAR            reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    COMMA           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    WHERE           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    AND             reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    OR              reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)
    ORDER           reduce using rule 25 (aggregate -> MIN LPAR TEXT RPAR .)


state 72

    (26) aggregate -> COUNT LPAR TEXT RPAR .

    FROM            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    +               reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    -               reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    $end            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    RPAR            reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    COMMA           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    WHERE           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    AND             reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    OR              reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)
    ORDER           reduce using rule 26 (aggregate -> COUNT LPAR TEXT RPAR .)


state 73

    (5) update -> UPDATE table SET column = . expression
    (6) update -> UPDATE table SET column = . expression WHERE conlist
    (50) expression -> . expression + value
    (51) expression -> . expression - value
    (52) expression -> . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    expression                     shift and go to state 85
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 74

    (7) insert -> INSERT table VALUES LPAR expressions . RPAR

    RPAR            shift and go to state 86


state 75

    (48) expressions -> expression . COMMA expressions
    (49) expressions -> expression .
    (50) expression -> expression . + value
    (51) expression -> expression . - value

    COMMA           shift and go to state 87
    RPAR            reduce using rule 49 (expressions -> expression .)
    +               shift and go to state 33
    -               shift and go to state 34


state 76

    (8) insert -> INSERT table LPAR columns RPAR . VALUES LPAR expressions RPAR

    VALUES          shift and go to state 88


state 77

    (10) delete -> DELETE FROM tables WHERE conlist .

    $end            reduce using rule 10 (delete -> DELETE FROM tables WHERE conlist .)


state 78

    (31) conlist -> condition .
    (33) conlist -> condition . AND condition
    (34) conlist -> condition . OR condition

    $end            reduce using rule 31 (conlist -> condition .)
    ORDER           reduce using rule 31 (conlist -> condition .)
    RPAR            reduce using rule 31 (conlist -> condition .)
    AND             shift and go to state 89
    OR              shift and go to state 90


state 79

    (32) conlist -> NOT . condition
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 91
    column                         shift and go to state 81

state 80

    (35) conlist -> TEXT . BETWEEN number AND number
    (36) conlist -> TEXT . IN LPAR select RPAR
    (20) column -> TEXT .
    (21) column -> TEXT . DOT TEXT

    BETWEEN         shift and go to state 92
    IN              shift and go to state 93
    >               reduce using rule 20 (column -> TEXT .)
    <               reduce using rule 20 (column -> TEXT .)
    =               reduce using rule 20 (column -> TEXT .)
    DOT             shift and go to state 35


state 81

    (40) condition -> column . > value
    (41) condition -> column . < value
    (42) condition -> column . = value
    (43) condition -> column . > column
    (44) condition -> column . < column
    (45) condition -> column . = column

    >               shift and go to state 94
    <               shift and go to state 95
    =               shift and go to state 96


state 82

    (28) tables -> table COMMA tables .

    WHERE           reduce using rule 28 (tables -> table COMMA tables .)
    $end            reduce using rule 28 (tables -> table COMMA tables .)
    ORDER           reduce using rule 28 (tables -> table COMMA tables .)
    RPAR            reduce using rule 28 (tables -> table COMMA tables .)


state 83

    (11) select -> SELECT columns FROM tables WHERE conlist . ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE conlist .

    ORDER           shift and go to state 97
    $end            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist .)
    RPAR            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist .)


state 84

    (13) select -> SELECT columns FROM tables ORDER BY . columns
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 98
    column                         shift and go to state 12

state 85

    (5) update -> UPDATE table SET column = expression .
    (6) update -> UPDATE table SET column = expression . WHERE conlist
    (50) expression -> expression . + value
    (51) expression -> expression . - value

    $end            reduce using rule 5 (update -> UPDATE table SET column = expression .)
    WHERE           shift and go to state 99
    +               shift and go to state 33
    -               shift and go to state 34


state 86

    (7) insert -> INSERT table VALUES LPAR expressions RPAR .

    $end            reduce using rule 7 (insert -> INSERT table VALUES LPAR expressions RPAR .)


state 87

    (48) expressions -> expression COMMA . expressions
    (48) expressions -> . expression COMMA expressions
    (49) expressions -> . expression
    (50) expression -> . expression + value
    (51) expression -> . expression - value
    (52) expression -> . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    expression                     shift and go to state 75
    expressions                    shift and go to state 100
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 88

    (8) insert -> INSERT table LPAR columns RPAR VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 101


state 89

    (33) conlist -> condition AND . condition
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 102
    column                         shift and go to state 81

state 90

    (34) conlist -> condition OR . condition
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    condition                      shift and go to state 103
    column                         shift and go to state 81

state 91

    (32) conlist -> NOT condition .

    $end            reduce using rule 32 (conlist -> NOT condition .)
    ORDER           reduce using rule 32 (conlist -> NOT condition .)
    RPAR            reduce using rule 32 (conlist -> NOT condition .)


state 92

    (35) conlist -> TEXT BETWEEN . number AND number
    (46) number -> . INTEGER
    (47) number -> . DOUBLE

    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20

    number                         shift and go to state 104

state 93

    (36) conlist -> TEXT IN . LPAR select RPAR

    LPAR            shift and go to state 105


state 94

    (40) condition -> column > . value
    (43) condition -> column > . column
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    column                         shift and go to state 106
    value                          shift and go to state 107
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 95

    (41) condition -> column < . value
    (44) condition -> column < . column
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    column                         shift and go to state 108
    value                          shift and go to state 109
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 96

    (42) condition -> column = . value
    (45) condition -> column = . column
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    *               shift and go to state 14
    TEXT            shift and go to state 15
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    column                         shift and go to state 110
    value                          shift and go to state 111
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 97

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER . BY columns

    BY              shift and go to state 112


state 98

    (13) select -> SELECT columns FROM tables ORDER BY columns .
    (17) columns -> columns . COMMA column

    $end            reduce using rule 13 (select -> SELECT columns FROM tables ORDER BY columns .)
    RPAR            reduce using rule 13 (select -> SELECT columns FROM tables ORDER BY columns .)
    COMMA           shift and go to state 31


state 99

    (6) update -> UPDATE table SET column = expression WHERE . conlist
    (31) conlist -> . condition
    (32) conlist -> . NOT condition
    (33) conlist -> . condition AND condition
    (34) conlist -> . condition OR condition
    (35) conlist -> . TEXT BETWEEN number AND number
    (36) conlist -> . TEXT IN LPAR select RPAR
    (40) condition -> . column > value
    (41) condition -> . column < value
    (42) condition -> . column = value
    (43) condition -> . column > column
    (44) condition -> . column < column
    (45) condition -> . column = column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    NOT             shift and go to state 79
    TEXT            shift and go to state 80
    *               shift and go to state 14

    column                         shift and go to state 81
    conlist                        shift and go to state 113
    condition                      shift and go to state 78

state 100

    (48) expressions -> expression COMMA expressions .

    RPAR            reduce using rule 48 (expressions -> expression COMMA expressions .)


state 101

    (8) insert -> INSERT table LPAR columns RPAR VALUES LPAR . expressions RPAR
    (48) expressions -> . expression COMMA expressions
    (49) expressions -> . expression
    (50) expression -> . expression + value
    (51) expression -> . expression - value
    (52) expression -> . value
    (37) value -> . number
    (38) value -> . aggregate
    (39) value -> . PUNCTUATION TEXT PUNCTUATION
    (46) number -> . INTEGER
    (47) number -> . DOUBLE
    (22) aggregate -> . SUM LPAR TEXT RPAR
    (23) aggregate -> . AVG LPAR TEXT RPAR
    (24) aggregate -> . MAX LPAR TEXT RPAR
    (25) aggregate -> . MIN LPAR TEXT RPAR
    (26) aggregate -> . COUNT LPAR TEXT RPAR

    PUNCTUATION     shift and go to state 18
    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20
    SUM             shift and go to state 21
    AVG             shift and go to state 22
    MAX             shift and go to state 23
    MIN             shift and go to state 24
    COUNT           shift and go to state 25

    expressions                    shift and go to state 114
    expression                     shift and go to state 75
    value                          shift and go to state 13
    number                         shift and go to state 16
    aggregate                      shift and go to state 17

state 102

    (33) conlist -> condition AND condition .

    $end            reduce using rule 33 (conlist -> condition AND condition .)
    ORDER           reduce using rule 33 (conlist -> condition AND condition .)
    RPAR            reduce using rule 33 (conlist -> condition AND condition .)


state 103

    (34) conlist -> condition OR condition .

    $end            reduce using rule 34 (conlist -> condition OR condition .)
    ORDER           reduce using rule 34 (conlist -> condition OR condition .)
    RPAR            reduce using rule 34 (conlist -> condition OR condition .)


state 104

    (35) conlist -> TEXT BETWEEN number . AND number

    AND             shift and go to state 115


state 105

    (36) conlist -> TEXT IN LPAR . select RPAR
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist
    (13) select -> . SELECT columns FROM tables ORDER BY columns
    (14) select -> . SELECT columns FROM tables
    (15) select -> . SELECT expression
    (16) select -> . SELECT expression FROM tables

    SELECT          shift and go to state 6

    select                         shift and go to state 116

state 106

    (43) condition -> column > column .

    AND             reduce using rule 43 (condition -> column > column .)
    OR              reduce using rule 43 (condition -> column > column .)
    $end            reduce using rule 43 (condition -> column > column .)
    ORDER           reduce using rule 43 (condition -> column > column .)
    RPAR            reduce using rule 43 (condition -> column > column .)


state 107

    (40) condition -> column > value .

    AND             reduce using rule 40 (condition -> column > value .)
    OR              reduce using rule 40 (condition -> column > value .)
    $end            reduce using rule 40 (condition -> column > value .)
    ORDER           reduce using rule 40 (condition -> column > value .)
    RPAR            reduce using rule 40 (condition -> column > value .)


state 108

    (44) condition -> column < column .

    AND             reduce using rule 44 (condition -> column < column .)
    OR              reduce using rule 44 (condition -> column < column .)
    $end            reduce using rule 44 (condition -> column < column .)
    ORDER           reduce using rule 44 (condition -> column < column .)
    RPAR            reduce using rule 44 (condition -> column < column .)


state 109

    (41) condition -> column < value .

    AND             reduce using rule 41 (condition -> column < value .)
    OR              reduce using rule 41 (condition -> column < value .)
    $end            reduce using rule 41 (condition -> column < value .)
    ORDER           reduce using rule 41 (condition -> column < value .)
    RPAR            reduce using rule 41 (condition -> column < value .)


state 110

    (45) condition -> column = column .

    AND             reduce using rule 45 (condition -> column = column .)
    OR              reduce using rule 45 (condition -> column = column .)
    $end            reduce using rule 45 (condition -> column = column .)
    ORDER           reduce using rule 45 (condition -> column = column .)
    RPAR            reduce using rule 45 (condition -> column = column .)


state 111

    (42) condition -> column = value .

    AND             reduce using rule 42 (condition -> column = value .)
    OR              reduce using rule 42 (condition -> column = value .)
    $end            reduce using rule 42 (condition -> column = value .)
    ORDER           reduce using rule 42 (condition -> column = value .)
    RPAR            reduce using rule 42 (condition -> column = value .)


state 112

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY . columns
    (17) columns -> . columns COMMA column
    (18) columns -> . column
    (19) column -> . *
    (20) column -> . TEXT
    (21) column -> . TEXT DOT TEXT

    *               shift and go to state 14
    TEXT            shift and go to state 15

    columns                        shift and go to state 117
    column                         shift and go to state 12

state 113

    (6) update -> UPDATE table SET column = expression WHERE conlist .

    $end            reduce using rule 6 (update -> UPDATE table SET column = expression WHERE conlist .)


state 114

    (8) insert -> INSERT table LPAR columns RPAR VALUES LPAR expressions . RPAR

    RPAR            shift and go to state 118


state 115

    (35) conlist -> TEXT BETWEEN number AND . number
    (46) number -> . INTEGER
    (47) number -> . DOUBLE

    INTEGER         shift and go to state 19
    DOUBLE          shift and go to state 20

    number                         shift and go to state 119

state 116

    (36) conlist -> TEXT IN LPAR select . RPAR

    RPAR            shift and go to state 120


state 117

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .
    (17) columns -> columns . COMMA column

    $end            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    RPAR            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    COMMA           shift and go to state 31


state 118

    (8) insert -> INSERT table LPAR columns RPAR VALUES LPAR expressions RPAR .

    $end            reduce using rule 8 (insert -> INSERT table LPAR columns RPAR VALUES LPAR expressions RPAR .)


state 119

    (35) conlist -> TEXT BETWEEN number AND number .

    $end            reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)
    ORDER           reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)
    RPAR            reduce using rule 35 (conlist -> TEXT BETWEEN number AND number .)


state 120

    (36) conlist -> TEXT IN LPAR select RPAR .

    $end            reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)
    ORDER           reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)
    RPAR            reduce using rule 36 (conlist -> TEXT IN LPAR select RPAR .)

