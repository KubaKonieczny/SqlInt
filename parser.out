Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT

Grammar

Rule 0     S' -> query
Rule 1     query -> select
Rule 2     query -> update
Rule 3     query -> insert
Rule 4     query -> delete
Rule 5     update -> UPDATE table SET column = expression
Rule 6     update -> UPDATE table SET column = expression WHERE conlist
Rule 7     insert -> INSERT INTO table VALUES LPAR expressions RPAR
Rule 8     insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR
Rule 9     delete -> DELETE FROM tables
Rule 10    delete -> DELETE FROM tables WHERE conlist
Rule 11    select -> SELECT columns FROM tables WHERE conlist ORDER BY columns
Rule 12    select -> SELECT columns FROM tables WHERE conlist ORDER BY columns order_type
Rule 13    select -> SELECT columns FROM tables WHERE conlist
Rule 14    select -> SELECT columns FROM tables ORDER BY columns
Rule 15    select -> SELECT columns FROM tables ORDER BY columns order_type
Rule 16    select -> SELECT columns FROM tables
Rule 17    select -> SELECT expression
Rule 18    select -> SELECT expression FROM tables
Rule 19    order_type -> ASC
Rule 20    order_type -> DESC
Rule 21    columns -> columns COMMA column
Rule 22    columns -> column
Rule 23    column -> *
Rule 24    column -> NAME
Rule 25    column -> NAME DOT NAME
Rule 26    aggregate -> SUM LPAR NAME RPAR
Rule 27    aggregate -> AVG LPAR NAME RPAR
Rule 28    aggregate -> MAX LPAR NAME RPAR
Rule 29    aggregate -> MIN LPAR NAME RPAR
Rule 30    aggregate -> COUNT LPAR NAME RPAR
Rule 31    tables -> table
Rule 32    tables -> tables COMMA table
Rule 33    table -> NAME
Rule 34    table -> NAME AS NAME
Rule 35    conlist -> condition
Rule 36    conlist -> condition AND conlist
Rule 37    conlist -> condition OR conlist
Rule 38    conlist -> NAME BETWEEN number AND number
Rule 39    conlist -> NAME IN LPAR select RPAR
Rule 40    texts -> TEXT
Rule 41    value -> number
Rule 42    value -> aggregate
Rule 43    value -> texts
Rule 44    condition -> column > value
Rule 45    condition -> column < value
Rule 46    condition -> column = value
Rule 47    condition -> column > column
Rule 48    condition -> column < column
Rule 49    condition -> column = column
Rule 50    number -> int
Rule 51    number -> double
Rule 52    int -> INTEGER
Rule 53    double -> DOUBLE
Rule 54    expressions -> expressions COMMA expression
Rule 55    expressions -> expression
Rule 56    expression -> expression + expression
Rule 57    expression -> expression - expression
Rule 58    expression -> expression * expression
Rule 59    expression -> expression / expression
Rule 60    expression -> LPAR expression RPAR
Rule 61    expression -> value

Terminals, with rules where they appear

*                    : 23 58
+                    : 56
-                    : 57
/                    : 59
<                    : 45 48
=                    : 5 6 46 49
>                    : 44 47
AND                  : 36 38
AS                   : 34
ASC                  : 19
AVG                  : 27
BETWEEN              : 38
BY                   : 11 12 14 15
COMMA                : 21 32 54
COUNT                : 30
DELETE               : 9 10
DESC                 : 20
DOT                  : 25
DOUBLE               : 53
FROM                 : 9 10 11 12 13 14 15 16 18
IN                   : 39
INSERT               : 7 8
INTEGER              : 52
INTO                 : 7 8
LPAR                 : 7 8 8 26 27 28 29 30 39 60
MAX                  : 28
MIN                  : 29
NAME                 : 24 25 25 26 27 28 29 30 33 34 34 38 39
NOT                  : 
OR                   : 37
ORDER                : 11 12 14 15
RPAR                 : 7 8 8 26 27 28 29 30 39 60
SELECT               : 11 12 13 14 15 16 17 18
SET                  : 5 6
SUM                  : 26
TEXT                 : 40
UPDATE               : 5 6
VALUES               : 7 8
WHERE                : 6 10 11 12 13
error                : 

Nonterminals, with rules where they appear

aggregate            : 42
column               : 5 6 21 22 44 45 46 47 47 48 48 49 49
columns              : 8 11 11 12 12 13 14 14 15 15 16 21
condition            : 35 36 37
conlist              : 6 10 11 12 13 36 37
delete               : 4
double               : 51
expression           : 5 6 17 18 54 55 56 56 57 57 58 58 59 59 60
expressions          : 7 8 54
insert               : 3
int                  : 50
number               : 38 38 41
order_type           : 12 15
query                : 0
select               : 1 39
table                : 5 6 7 8 31 32
tables               : 9 10 11 12 13 14 15 16 18 32
texts                : 43
update               : 2
value                : 44 45 46 61

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select
    (2) query -> . update
    (3) query -> . insert
    (4) query -> . delete
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns order_type
    (13) select -> . SELECT columns FROM tables WHERE conlist
    (14) select -> . SELECT columns FROM tables ORDER BY columns
    (15) select -> . SELECT columns FROM tables ORDER BY columns order_type
    (16) select -> . SELECT columns FROM tables
    (17) select -> . SELECT expression
    (18) select -> . SELECT expression FROM tables
    (5) update -> . UPDATE table SET column = expression
    (6) update -> . UPDATE table SET column = expression WHERE conlist
    (7) insert -> . INSERT INTO table VALUES LPAR expressions RPAR
    (8) insert -> . INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR
    (9) delete -> . DELETE FROM tables
    (10) delete -> . DELETE FROM tables WHERE conlist

    SELECT          shift and go to state 6
    UPDATE          shift and go to state 7
    INSERT          shift and go to state 8
    DELETE          shift and go to state 9

    query                          shift and go to state 1
    select                         shift and go to state 2
    update                         shift and go to state 3
    insert                         shift and go to state 4
    delete                         shift and go to state 5

state 1

    (0) S' -> query .



state 2

    (1) query -> select .

    $end            reduce using rule 1 (query -> select .)


state 3

    (2) query -> update .

    $end            reduce using rule 2 (query -> update .)


state 4

    (3) query -> insert .

    $end            reduce using rule 3 (query -> insert .)


state 5

    (4) query -> delete .

    $end            reduce using rule 4 (query -> delete .)


state 6

    (11) select -> SELECT . columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT . columns FROM tables WHERE conlist ORDER BY columns order_type
    (13) select -> SELECT . columns FROM tables WHERE conlist
    (14) select -> SELECT . columns FROM tables ORDER BY columns
    (15) select -> SELECT . columns FROM tables ORDER BY columns order_type
    (16) select -> SELECT . columns FROM tables
    (17) select -> SELECT . expression
    (18) select -> SELECT . expression FROM tables
    (21) columns -> . columns COMMA column
    (22) columns -> . column
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    *               shift and go to state 13
    NAME            shift and go to state 16
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    columns                        shift and go to state 10
    expression                     shift and go to state 11
    column                         shift and go to state 12
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 7

    (5) update -> UPDATE . table SET column = expression
    (6) update -> UPDATE . table SET column = expression WHERE conlist
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    table                          shift and go to state 30

state 8

    (7) insert -> INSERT . INTO table VALUES LPAR expressions RPAR
    (8) insert -> INSERT . INTO table LPAR columns RPAR VALUES LPAR expressions RPAR

    INTO            shift and go to state 32


state 9

    (9) delete -> DELETE . FROM tables
    (10) delete -> DELETE . FROM tables WHERE conlist

    FROM            shift and go to state 33


state 10

    (11) select -> SELECT columns . FROM tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns . FROM tables WHERE conlist ORDER BY columns order_type
    (13) select -> SELECT columns . FROM tables WHERE conlist
    (14) select -> SELECT columns . FROM tables ORDER BY columns
    (15) select -> SELECT columns . FROM tables ORDER BY columns order_type
    (16) select -> SELECT columns . FROM tables
    (21) columns -> columns . COMMA column

    FROM            shift and go to state 34
    COMMA           shift and go to state 35


state 11

    (17) select -> SELECT expression .
    (18) select -> SELECT expression . FROM tables
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    $end            reduce using rule 17 (select -> SELECT expression .)
    RPAR            reduce using rule 17 (select -> SELECT expression .)
    FROM            shift and go to state 36
    +               shift and go to state 37
    -               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40


state 12

    (22) columns -> column .

    FROM            reduce using rule 22 (columns -> column .)
    COMMA           reduce using rule 22 (columns -> column .)
    RPAR            reduce using rule 22 (columns -> column .)
    ASC             reduce using rule 22 (columns -> column .)
    DESC            reduce using rule 22 (columns -> column .)
    $end            reduce using rule 22 (columns -> column .)


state 13

    (23) column -> * .

    FROM            reduce using rule 23 (column -> * .)
    COMMA           reduce using rule 23 (column -> * .)
    RPAR            reduce using rule 23 (column -> * .)
    ASC             reduce using rule 23 (column -> * .)
    DESC            reduce using rule 23 (column -> * .)
    $end            reduce using rule 23 (column -> * .)
    =               reduce using rule 23 (column -> * .)
    >               reduce using rule 23 (column -> * .)
    <               reduce using rule 23 (column -> * .)
    AND             reduce using rule 23 (column -> * .)
    OR              reduce using rule 23 (column -> * .)
    ORDER           reduce using rule 23 (column -> * .)


state 14

    (60) expression -> LPAR . expression RPAR
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 41
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 15

    (61) expression -> value .

    FROM            reduce using rule 61 (expression -> value .)
    +               reduce using rule 61 (expression -> value .)
    -               reduce using rule 61 (expression -> value .)
    *               reduce using rule 61 (expression -> value .)
    /               reduce using rule 61 (expression -> value .)
    $end            reduce using rule 61 (expression -> value .)
    RPAR            reduce using rule 61 (expression -> value .)
    WHERE           reduce using rule 61 (expression -> value .)
    COMMA           reduce using rule 61 (expression -> value .)


state 16

    (24) column -> NAME .
    (25) column -> NAME . DOT NAME

    FROM            reduce using rule 24 (column -> NAME .)
    COMMA           reduce using rule 24 (column -> NAME .)
    RPAR            reduce using rule 24 (column -> NAME .)
    ASC             reduce using rule 24 (column -> NAME .)
    DESC            reduce using rule 24 (column -> NAME .)
    $end            reduce using rule 24 (column -> NAME .)
    =               reduce using rule 24 (column -> NAME .)
    AND             reduce using rule 24 (column -> NAME .)
    OR              reduce using rule 24 (column -> NAME .)
    ORDER           reduce using rule 24 (column -> NAME .)
    DOT             shift and go to state 42


state 17

    (41) value -> number .

    FROM            reduce using rule 41 (value -> number .)
    +               reduce using rule 41 (value -> number .)
    -               reduce using rule 41 (value -> number .)
    *               reduce using rule 41 (value -> number .)
    /               reduce using rule 41 (value -> number .)
    $end            reduce using rule 41 (value -> number .)
    RPAR            reduce using rule 41 (value -> number .)
    WHERE           reduce using rule 41 (value -> number .)
    COMMA           reduce using rule 41 (value -> number .)
    AND             reduce using rule 41 (value -> number .)
    OR              reduce using rule 41 (value -> number .)
    ORDER           reduce using rule 41 (value -> number .)


state 18

    (42) value -> aggregate .

    FROM            reduce using rule 42 (value -> aggregate .)
    +               reduce using rule 42 (value -> aggregate .)
    -               reduce using rule 42 (value -> aggregate .)
    *               reduce using rule 42 (value -> aggregate .)
    /               reduce using rule 42 (value -> aggregate .)
    $end            reduce using rule 42 (value -> aggregate .)
    RPAR            reduce using rule 42 (value -> aggregate .)
    WHERE           reduce using rule 42 (value -> aggregate .)
    COMMA           reduce using rule 42 (value -> aggregate .)
    AND             reduce using rule 42 (value -> aggregate .)
    OR              reduce using rule 42 (value -> aggregate .)
    ORDER           reduce using rule 42 (value -> aggregate .)


state 19

    (43) value -> texts .

    FROM            reduce using rule 43 (value -> texts .)
    +               reduce using rule 43 (value -> texts .)
    -               reduce using rule 43 (value -> texts .)
    *               reduce using rule 43 (value -> texts .)
    /               reduce using rule 43 (value -> texts .)
    $end            reduce using rule 43 (value -> texts .)
    RPAR            reduce using rule 43 (value -> texts .)
    WHERE           reduce using rule 43 (value -> texts .)
    COMMA           reduce using rule 43 (value -> texts .)
    AND             reduce using rule 43 (value -> texts .)
    OR              reduce using rule 43 (value -> texts .)
    ORDER           reduce using rule 43 (value -> texts .)


state 20

    (50) number -> int .

    FROM            reduce using rule 50 (number -> int .)
    +               reduce using rule 50 (number -> int .)
    -               reduce using rule 50 (number -> int .)
    *               reduce using rule 50 (number -> int .)
    /               reduce using rule 50 (number -> int .)
    $end            reduce using rule 50 (number -> int .)
    RPAR            reduce using rule 50 (number -> int .)
    WHERE           reduce using rule 50 (number -> int .)
    COMMA           reduce using rule 50 (number -> int .)
    AND             reduce using rule 50 (number -> int .)
    OR              reduce using rule 50 (number -> int .)
    ORDER           reduce using rule 50 (number -> int .)


state 21

    (51) number -> double .

    FROM            reduce using rule 51 (number -> double .)
    +               reduce using rule 51 (number -> double .)
    -               reduce using rule 51 (number -> double .)
    *               reduce using rule 51 (number -> double .)
    /               reduce using rule 51 (number -> double .)
    $end            reduce using rule 51 (number -> double .)
    RPAR            reduce using rule 51 (number -> double .)
    WHERE           reduce using rule 51 (number -> double .)
    COMMA           reduce using rule 51 (number -> double .)
    AND             reduce using rule 51 (number -> double .)
    OR              reduce using rule 51 (number -> double .)
    ORDER           reduce using rule 51 (number -> double .)


state 22

    (26) aggregate -> SUM . LPAR NAME RPAR

    LPAR            shift and go to state 43


state 23

    (27) aggregate -> AVG . LPAR NAME RPAR

    LPAR            shift and go to state 44


state 24

    (28) aggregate -> MAX . LPAR NAME RPAR

    LPAR            shift and go to state 45


state 25

    (29) aggregate -> MIN . LPAR NAME RPAR

    LPAR            shift and go to state 46


state 26

    (30) aggregate -> COUNT . LPAR NAME RPAR

    LPAR            shift and go to state 47


state 27

    (40) texts -> TEXT .

    FROM            reduce using rule 40 (texts -> TEXT .)
    +               reduce using rule 40 (texts -> TEXT .)
    -               reduce using rule 40 (texts -> TEXT .)
    *               reduce using rule 40 (texts -> TEXT .)
    /               reduce using rule 40 (texts -> TEXT .)
    $end            reduce using rule 40 (texts -> TEXT .)
    RPAR            reduce using rule 40 (texts -> TEXT .)
    WHERE           reduce using rule 40 (texts -> TEXT .)
    COMMA           reduce using rule 40 (texts -> TEXT .)
    AND             reduce using rule 40 (texts -> TEXT .)
    OR              reduce using rule 40 (texts -> TEXT .)
    ORDER           reduce using rule 40 (texts -> TEXT .)


state 28

    (52) int -> INTEGER .

    FROM            reduce using rule 52 (int -> INTEGER .)
    +               reduce using rule 52 (int -> INTEGER .)
    -               reduce using rule 52 (int -> INTEGER .)
    *               reduce using rule 52 (int -> INTEGER .)
    /               reduce using rule 52 (int -> INTEGER .)
    $end            reduce using rule 52 (int -> INTEGER .)
    RPAR            reduce using rule 52 (int -> INTEGER .)
    WHERE           reduce using rule 52 (int -> INTEGER .)
    COMMA           reduce using rule 52 (int -> INTEGER .)
    AND             reduce using rule 52 (int -> INTEGER .)
    OR              reduce using rule 52 (int -> INTEGER .)
    ORDER           reduce using rule 52 (int -> INTEGER .)


state 29

    (53) double -> DOUBLE .

    FROM            reduce using rule 53 (double -> DOUBLE .)
    +               reduce using rule 53 (double -> DOUBLE .)
    -               reduce using rule 53 (double -> DOUBLE .)
    *               reduce using rule 53 (double -> DOUBLE .)
    /               reduce using rule 53 (double -> DOUBLE .)
    $end            reduce using rule 53 (double -> DOUBLE .)
    RPAR            reduce using rule 53 (double -> DOUBLE .)
    WHERE           reduce using rule 53 (double -> DOUBLE .)
    COMMA           reduce using rule 53 (double -> DOUBLE .)
    AND             reduce using rule 53 (double -> DOUBLE .)
    OR              reduce using rule 53 (double -> DOUBLE .)
    ORDER           reduce using rule 53 (double -> DOUBLE .)


state 30

    (5) update -> UPDATE table . SET column = expression
    (6) update -> UPDATE table . SET column = expression WHERE conlist

    SET             shift and go to state 48


state 31

    (33) table -> NAME .
    (34) table -> NAME . AS NAME

    SET             reduce using rule 33 (table -> NAME .)
    VALUES          reduce using rule 33 (table -> NAME .)
    LPAR            reduce using rule 33 (table -> NAME .)
    WHERE           reduce using rule 33 (table -> NAME .)
    COMMA           reduce using rule 33 (table -> NAME .)
    $end            reduce using rule 33 (table -> NAME .)
    ORDER           reduce using rule 33 (table -> NAME .)
    RPAR            reduce using rule 33 (table -> NAME .)
    AS              shift and go to state 49


state 32

    (7) insert -> INSERT INTO . table VALUES LPAR expressions RPAR
    (8) insert -> INSERT INTO . table LPAR columns RPAR VALUES LPAR expressions RPAR
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    table                          shift and go to state 50

state 33

    (9) delete -> DELETE FROM . tables
    (10) delete -> DELETE FROM . tables WHERE conlist
    (31) tables -> . table
    (32) tables -> . tables COMMA table
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    tables                         shift and go to state 51
    table                          shift and go to state 52

state 34

    (11) select -> SELECT columns FROM . tables WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM . tables WHERE conlist ORDER BY columns order_type
    (13) select -> SELECT columns FROM . tables WHERE conlist
    (14) select -> SELECT columns FROM . tables ORDER BY columns
    (15) select -> SELECT columns FROM . tables ORDER BY columns order_type
    (16) select -> SELECT columns FROM . tables
    (31) tables -> . table
    (32) tables -> . tables COMMA table
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    tables                         shift and go to state 53
    table                          shift and go to state 52

state 35

    (21) columns -> columns COMMA . column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    *               shift and go to state 13
    NAME            shift and go to state 16

    column                         shift and go to state 54

state 36

    (18) select -> SELECT expression FROM . tables
    (31) tables -> . table
    (32) tables -> . tables COMMA table
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    tables                         shift and go to state 55
    table                          shift and go to state 52

state 37

    (56) expression -> expression + . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 56
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 38

    (57) expression -> expression - . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 57
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 39

    (58) expression -> expression * . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 58
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 40

    (59) expression -> expression / . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 59
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 41

    (60) expression -> LPAR expression . RPAR
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    RPAR            shift and go to state 60
    +               shift and go to state 37
    -               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40


state 42

    (25) column -> NAME DOT . NAME

    NAME            shift and go to state 61


state 43

    (26) aggregate -> SUM LPAR . NAME RPAR

    NAME            shift and go to state 62


state 44

    (27) aggregate -> AVG LPAR . NAME RPAR

    NAME            shift and go to state 63


state 45

    (28) aggregate -> MAX LPAR . NAME RPAR

    NAME            shift and go to state 64


state 46

    (29) aggregate -> MIN LPAR . NAME RPAR

    NAME            shift and go to state 65


state 47

    (30) aggregate -> COUNT LPAR . NAME RPAR

    NAME            shift and go to state 66


state 48

    (5) update -> UPDATE table SET . column = expression
    (6) update -> UPDATE table SET . column = expression WHERE conlist
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    *               shift and go to state 13
    NAME            shift and go to state 16

    column                         shift and go to state 67

state 49

    (34) table -> NAME AS . NAME

    NAME            shift and go to state 68


state 50

    (7) insert -> INSERT INTO table . VALUES LPAR expressions RPAR
    (8) insert -> INSERT INTO table . LPAR columns RPAR VALUES LPAR expressions RPAR

    VALUES          shift and go to state 69
    LPAR            shift and go to state 70


state 51

    (9) delete -> DELETE FROM tables .
    (10) delete -> DELETE FROM tables . WHERE conlist
    (32) tables -> tables . COMMA table

    $end            reduce using rule 9 (delete -> DELETE FROM tables .)
    WHERE           shift and go to state 71
    COMMA           shift and go to state 72


state 52

    (31) tables -> table .

    WHERE           reduce using rule 31 (tables -> table .)
    COMMA           reduce using rule 31 (tables -> table .)
    $end            reduce using rule 31 (tables -> table .)
    ORDER           reduce using rule 31 (tables -> table .)
    RPAR            reduce using rule 31 (tables -> table .)


state 53

    (11) select -> SELECT columns FROM tables . WHERE conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables . WHERE conlist ORDER BY columns order_type
    (13) select -> SELECT columns FROM tables . WHERE conlist
    (14) select -> SELECT columns FROM tables . ORDER BY columns
    (15) select -> SELECT columns FROM tables . ORDER BY columns order_type
    (16) select -> SELECT columns FROM tables .
    (32) tables -> tables . COMMA table

    WHERE           shift and go to state 73
    ORDER           shift and go to state 74
    $end            reduce using rule 16 (select -> SELECT columns FROM tables .)
    RPAR            reduce using rule 16 (select -> SELECT columns FROM tables .)
    COMMA           shift and go to state 72


state 54

    (21) columns -> columns COMMA column .

    FROM            reduce using rule 21 (columns -> columns COMMA column .)
    COMMA           reduce using rule 21 (columns -> columns COMMA column .)
    RPAR            reduce using rule 21 (columns -> columns COMMA column .)
    ASC             reduce using rule 21 (columns -> columns COMMA column .)
    DESC            reduce using rule 21 (columns -> columns COMMA column .)
    $end            reduce using rule 21 (columns -> columns COMMA column .)


state 55

    (18) select -> SELECT expression FROM tables .
    (32) tables -> tables . COMMA table

    $end            reduce using rule 18 (select -> SELECT expression FROM tables .)
    RPAR            reduce using rule 18 (select -> SELECT expression FROM tables .)
    COMMA           shift and go to state 72


state 56

    (56) expression -> expression + expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    FROM            reduce using rule 56 (expression -> expression + expression .)
    +               reduce using rule 56 (expression -> expression + expression .)
    -               reduce using rule 56 (expression -> expression + expression .)
    $end            reduce using rule 56 (expression -> expression + expression .)
    RPAR            reduce using rule 56 (expression -> expression + expression .)
    WHERE           reduce using rule 56 (expression -> expression + expression .)
    COMMA           reduce using rule 56 (expression -> expression + expression .)
    *               shift and go to state 39
    /               shift and go to state 40

  ! *               [ reduce using rule 56 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 56 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 38 ]


state 57

    (57) expression -> expression - expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    FROM            reduce using rule 57 (expression -> expression - expression .)
    +               reduce using rule 57 (expression -> expression - expression .)
    -               reduce using rule 57 (expression -> expression - expression .)
    $end            reduce using rule 57 (expression -> expression - expression .)
    RPAR            reduce using rule 57 (expression -> expression - expression .)
    WHERE           reduce using rule 57 (expression -> expression - expression .)
    COMMA           reduce using rule 57 (expression -> expression - expression .)
    *               shift and go to state 39
    /               shift and go to state 40

  ! *               [ reduce using rule 57 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 57 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 38 ]


state 58

    (58) expression -> expression * expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    FROM            reduce using rule 58 (expression -> expression * expression .)
    +               reduce using rule 58 (expression -> expression * expression .)
    -               reduce using rule 58 (expression -> expression * expression .)
    *               reduce using rule 58 (expression -> expression * expression .)
    /               reduce using rule 58 (expression -> expression * expression .)
    $end            reduce using rule 58 (expression -> expression * expression .)
    RPAR            reduce using rule 58 (expression -> expression * expression .)
    WHERE           reduce using rule 58 (expression -> expression * expression .)
    COMMA           reduce using rule 58 (expression -> expression * expression .)

  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 38 ]
  ! *               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]


state 59

    (59) expression -> expression / expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    FROM            reduce using rule 59 (expression -> expression / expression .)
    +               reduce using rule 59 (expression -> expression / expression .)
    -               reduce using rule 59 (expression -> expression / expression .)
    *               reduce using rule 59 (expression -> expression / expression .)
    /               reduce using rule 59 (expression -> expression / expression .)
    $end            reduce using rule 59 (expression -> expression / expression .)
    RPAR            reduce using rule 59 (expression -> expression / expression .)
    WHERE           reduce using rule 59 (expression -> expression / expression .)
    COMMA           reduce using rule 59 (expression -> expression / expression .)

  ! +               [ shift and go to state 37 ]
  ! -               [ shift and go to state 38 ]
  ! *               [ shift and go to state 39 ]
  ! /               [ shift and go to state 40 ]


state 60

    (60) expression -> LPAR expression RPAR .

    FROM            reduce using rule 60 (expression -> LPAR expression RPAR .)
    +               reduce using rule 60 (expression -> LPAR expression RPAR .)
    -               reduce using rule 60 (expression -> LPAR expression RPAR .)
    *               reduce using rule 60 (expression -> LPAR expression RPAR .)
    /               reduce using rule 60 (expression -> LPAR expression RPAR .)
    $end            reduce using rule 60 (expression -> LPAR expression RPAR .)
    RPAR            reduce using rule 60 (expression -> LPAR expression RPAR .)
    WHERE           reduce using rule 60 (expression -> LPAR expression RPAR .)
    COMMA           reduce using rule 60 (expression -> LPAR expression RPAR .)


state 61

    (25) column -> NAME DOT NAME .

    FROM            reduce using rule 25 (column -> NAME DOT NAME .)
    COMMA           reduce using rule 25 (column -> NAME DOT NAME .)
    RPAR            reduce using rule 25 (column -> NAME DOT NAME .)
    ASC             reduce using rule 25 (column -> NAME DOT NAME .)
    DESC            reduce using rule 25 (column -> NAME DOT NAME .)
    $end            reduce using rule 25 (column -> NAME DOT NAME .)
    =               reduce using rule 25 (column -> NAME DOT NAME .)
    >               reduce using rule 25 (column -> NAME DOT NAME .)
    <               reduce using rule 25 (column -> NAME DOT NAME .)
    AND             reduce using rule 25 (column -> NAME DOT NAME .)
    OR              reduce using rule 25 (column -> NAME DOT NAME .)
    ORDER           reduce using rule 25 (column -> NAME DOT NAME .)


state 62

    (26) aggregate -> SUM LPAR NAME . RPAR

    RPAR            shift and go to state 75


state 63

    (27) aggregate -> AVG LPAR NAME . RPAR

    RPAR            shift and go to state 76


state 64

    (28) aggregate -> MAX LPAR NAME . RPAR

    RPAR            shift and go to state 77


state 65

    (29) aggregate -> MIN LPAR NAME . RPAR

    RPAR            shift and go to state 78


state 66

    (30) aggregate -> COUNT LPAR NAME . RPAR

    RPAR            shift and go to state 79


state 67

    (5) update -> UPDATE table SET column . = expression
    (6) update -> UPDATE table SET column . = expression WHERE conlist

    =               shift and go to state 80


state 68

    (34) table -> NAME AS NAME .

    SET             reduce using rule 34 (table -> NAME AS NAME .)
    VALUES          reduce using rule 34 (table -> NAME AS NAME .)
    LPAR            reduce using rule 34 (table -> NAME AS NAME .)
    WHERE           reduce using rule 34 (table -> NAME AS NAME .)
    COMMA           reduce using rule 34 (table -> NAME AS NAME .)
    $end            reduce using rule 34 (table -> NAME AS NAME .)
    ORDER           reduce using rule 34 (table -> NAME AS NAME .)
    RPAR            reduce using rule 34 (table -> NAME AS NAME .)


state 69

    (7) insert -> INSERT INTO table VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 81


state 70

    (8) insert -> INSERT INTO table LPAR . columns RPAR VALUES LPAR expressions RPAR
    (21) columns -> . columns COMMA column
    (22) columns -> . column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    *               shift and go to state 13
    NAME            shift and go to state 16

    columns                        shift and go to state 82
    column                         shift and go to state 12

state 71

    (10) delete -> DELETE FROM tables WHERE . conlist
    (35) conlist -> . condition
    (36) conlist -> . condition AND conlist
    (37) conlist -> . condition OR conlist
    (38) conlist -> . NAME BETWEEN number AND number
    (39) conlist -> . NAME IN LPAR select RPAR
    (44) condition -> . column > value
    (45) condition -> . column < value
    (46) condition -> . column = value
    (47) condition -> . column > column
    (48) condition -> . column < column
    (49) condition -> . column = column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    NAME            shift and go to state 85
    *               shift and go to state 13

    conlist                        shift and go to state 83
    condition                      shift and go to state 84
    column                         shift and go to state 86

state 72

    (32) tables -> tables COMMA . table
    (33) table -> . NAME
    (34) table -> . NAME AS NAME

    NAME            shift and go to state 31

    table                          shift and go to state 87

state 73

    (11) select -> SELECT columns FROM tables WHERE . conlist ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE . conlist ORDER BY columns order_type
    (13) select -> SELECT columns FROM tables WHERE . conlist
    (35) conlist -> . condition
    (36) conlist -> . condition AND conlist
    (37) conlist -> . condition OR conlist
    (38) conlist -> . NAME BETWEEN number AND number
    (39) conlist -> . NAME IN LPAR select RPAR
    (44) condition -> . column > value
    (45) condition -> . column < value
    (46) condition -> . column = value
    (47) condition -> . column > column
    (48) condition -> . column < column
    (49) condition -> . column = column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    NAME            shift and go to state 85
    *               shift and go to state 13

    conlist                        shift and go to state 88
    condition                      shift and go to state 84
    column                         shift and go to state 86

state 74

    (14) select -> SELECT columns FROM tables ORDER . BY columns
    (15) select -> SELECT columns FROM tables ORDER . BY columns order_type

    BY              shift and go to state 89


state 75

    (26) aggregate -> SUM LPAR NAME RPAR .

    FROM            reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    +               reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    -               reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    *               reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    /               reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    $end            reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    RPAR            reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    WHERE           reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    COMMA           reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    AND             reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    OR              reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)
    ORDER           reduce using rule 26 (aggregate -> SUM LPAR NAME RPAR .)


state 76

    (27) aggregate -> AVG LPAR NAME RPAR .

    FROM            reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    +               reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    -               reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    *               reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    /               reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    $end            reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    RPAR            reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    WHERE           reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    COMMA           reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    AND             reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    OR              reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)
    ORDER           reduce using rule 27 (aggregate -> AVG LPAR NAME RPAR .)


state 77

    (28) aggregate -> MAX LPAR NAME RPAR .

    FROM            reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    +               reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    -               reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    *               reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    /               reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    $end            reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    RPAR            reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    WHERE           reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    COMMA           reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    AND             reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    OR              reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)
    ORDER           reduce using rule 28 (aggregate -> MAX LPAR NAME RPAR .)


state 78

    (29) aggregate -> MIN LPAR NAME RPAR .

    FROM            reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    +               reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    -               reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    *               reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    /               reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    $end            reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    RPAR            reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    WHERE           reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    COMMA           reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    AND             reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    OR              reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)
    ORDER           reduce using rule 29 (aggregate -> MIN LPAR NAME RPAR .)


state 79

    (30) aggregate -> COUNT LPAR NAME RPAR .

    FROM            reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    +               reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    -               reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    *               reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    /               reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    $end            reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    RPAR            reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    WHERE           reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    COMMA           reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    AND             reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    OR              reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)
    ORDER           reduce using rule 30 (aggregate -> COUNT LPAR NAME RPAR .)


state 80

    (5) update -> UPDATE table SET column = . expression
    (6) update -> UPDATE table SET column = . expression WHERE conlist
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 90
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 81

    (7) insert -> INSERT INTO table VALUES LPAR . expressions RPAR
    (54) expressions -> . expressions COMMA expression
    (55) expressions -> . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expressions                    shift and go to state 91
    expression                     shift and go to state 92
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 82

    (8) insert -> INSERT INTO table LPAR columns . RPAR VALUES LPAR expressions RPAR
    (21) columns -> columns . COMMA column

    RPAR            shift and go to state 93
    COMMA           shift and go to state 35


state 83

    (10) delete -> DELETE FROM tables WHERE conlist .

    $end            reduce using rule 10 (delete -> DELETE FROM tables WHERE conlist .)


state 84

    (35) conlist -> condition .
    (36) conlist -> condition . AND conlist
    (37) conlist -> condition . OR conlist

    $end            reduce using rule 35 (conlist -> condition .)
    ORDER           reduce using rule 35 (conlist -> condition .)
    RPAR            reduce using rule 35 (conlist -> condition .)
    AND             shift and go to state 94
    OR              shift and go to state 95


state 85

    (38) conlist -> NAME . BETWEEN number AND number
    (39) conlist -> NAME . IN LPAR select RPAR
    (24) column -> NAME .
    (25) column -> NAME . DOT NAME

    BETWEEN         shift and go to state 96
    IN              shift and go to state 97
    >               reduce using rule 24 (column -> NAME .)
    <               reduce using rule 24 (column -> NAME .)
    =               reduce using rule 24 (column -> NAME .)
    DOT             shift and go to state 42


state 86

    (44) condition -> column . > value
    (45) condition -> column . < value
    (46) condition -> column . = value
    (47) condition -> column . > column
    (48) condition -> column . < column
    (49) condition -> column . = column

    >               shift and go to state 98
    <               shift and go to state 99
    =               shift and go to state 100


state 87

    (32) tables -> tables COMMA table .

    WHERE           reduce using rule 32 (tables -> tables COMMA table .)
    COMMA           reduce using rule 32 (tables -> tables COMMA table .)
    $end            reduce using rule 32 (tables -> tables COMMA table .)
    ORDER           reduce using rule 32 (tables -> tables COMMA table .)
    RPAR            reduce using rule 32 (tables -> tables COMMA table .)


state 88

    (11) select -> SELECT columns FROM tables WHERE conlist . ORDER BY columns
    (12) select -> SELECT columns FROM tables WHERE conlist . ORDER BY columns order_type
    (13) select -> SELECT columns FROM tables WHERE conlist .

    ORDER           shift and go to state 101
    $end            reduce using rule 13 (select -> SELECT columns FROM tables WHERE conlist .)
    RPAR            reduce using rule 13 (select -> SELECT columns FROM tables WHERE conlist .)


state 89

    (14) select -> SELECT columns FROM tables ORDER BY . columns
    (15) select -> SELECT columns FROM tables ORDER BY . columns order_type
    (21) columns -> . columns COMMA column
    (22) columns -> . column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    *               shift and go to state 13
    NAME            shift and go to state 16

    columns                        shift and go to state 102
    column                         shift and go to state 12

state 90

    (5) update -> UPDATE table SET column = expression .
    (6) update -> UPDATE table SET column = expression . WHERE conlist
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    $end            reduce using rule 5 (update -> UPDATE table SET column = expression .)
    WHERE           shift and go to state 103
    +               shift and go to state 37
    -               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40


state 91

    (7) insert -> INSERT INTO table VALUES LPAR expressions . RPAR
    (54) expressions -> expressions . COMMA expression

    RPAR            shift and go to state 104
    COMMA           shift and go to state 105


state 92

    (55) expressions -> expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    RPAR            reduce using rule 55 (expressions -> expression .)
    COMMA           reduce using rule 55 (expressions -> expression .)
    +               shift and go to state 37
    -               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40


state 93

    (8) insert -> INSERT INTO table LPAR columns RPAR . VALUES LPAR expressions RPAR

    VALUES          shift and go to state 106


state 94

    (36) conlist -> condition AND . conlist
    (35) conlist -> . condition
    (36) conlist -> . condition AND conlist
    (37) conlist -> . condition OR conlist
    (38) conlist -> . NAME BETWEEN number AND number
    (39) conlist -> . NAME IN LPAR select RPAR
    (44) condition -> . column > value
    (45) condition -> . column < value
    (46) condition -> . column = value
    (47) condition -> . column > column
    (48) condition -> . column < column
    (49) condition -> . column = column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    NAME            shift and go to state 85
    *               shift and go to state 13

    condition                      shift and go to state 84
    conlist                        shift and go to state 107
    column                         shift and go to state 86

state 95

    (37) conlist -> condition OR . conlist
    (35) conlist -> . condition
    (36) conlist -> . condition AND conlist
    (37) conlist -> . condition OR conlist
    (38) conlist -> . NAME BETWEEN number AND number
    (39) conlist -> . NAME IN LPAR select RPAR
    (44) condition -> . column > value
    (45) condition -> . column < value
    (46) condition -> . column = value
    (47) condition -> . column > column
    (48) condition -> . column < column
    (49) condition -> . column = column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    NAME            shift and go to state 85
    *               shift and go to state 13

    condition                      shift and go to state 84
    conlist                        shift and go to state 108
    column                         shift and go to state 86

state 96

    (38) conlist -> NAME BETWEEN . number AND number
    (50) number -> . int
    (51) number -> . double
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    number                         shift and go to state 109
    int                            shift and go to state 20
    double                         shift and go to state 21

state 97

    (39) conlist -> NAME IN . LPAR select RPAR

    LPAR            shift and go to state 110


state 98

    (44) condition -> column > . value
    (47) condition -> column > . column
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    *               shift and go to state 13
    NAME            shift and go to state 16
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    column                         shift and go to state 111
    value                          shift and go to state 112
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 99

    (45) condition -> column < . value
    (48) condition -> column < . column
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    *               shift and go to state 13
    NAME            shift and go to state 16
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    column                         shift and go to state 113
    value                          shift and go to state 114
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 100

    (46) condition -> column = . value
    (49) condition -> column = . column
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    *               shift and go to state 13
    NAME            shift and go to state 16
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    column                         shift and go to state 115
    value                          shift and go to state 116
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 101

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER . BY columns
    (12) select -> SELECT columns FROM tables WHERE conlist ORDER . BY columns order_type

    BY              shift and go to state 117


state 102

    (14) select -> SELECT columns FROM tables ORDER BY columns .
    (15) select -> SELECT columns FROM tables ORDER BY columns . order_type
    (21) columns -> columns . COMMA column
    (19) order_type -> . ASC
    (20) order_type -> . DESC

    $end            reduce using rule 14 (select -> SELECT columns FROM tables ORDER BY columns .)
    RPAR            reduce using rule 14 (select -> SELECT columns FROM tables ORDER BY columns .)
    COMMA           shift and go to state 35
    ASC             shift and go to state 119
    DESC            shift and go to state 120

    order_type                     shift and go to state 118

state 103

    (6) update -> UPDATE table SET column = expression WHERE . conlist
    (35) conlist -> . condition
    (36) conlist -> . condition AND conlist
    (37) conlist -> . condition OR conlist
    (38) conlist -> . NAME BETWEEN number AND number
    (39) conlist -> . NAME IN LPAR select RPAR
    (44) condition -> . column > value
    (45) condition -> . column < value
    (46) condition -> . column = value
    (47) condition -> . column > column
    (48) condition -> . column < column
    (49) condition -> . column = column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    NAME            shift and go to state 85
    *               shift and go to state 13

    column                         shift and go to state 86
    conlist                        shift and go to state 121
    condition                      shift and go to state 84

state 104

    (7) insert -> INSERT INTO table VALUES LPAR expressions RPAR .

    $end            reduce using rule 7 (insert -> INSERT INTO table VALUES LPAR expressions RPAR .)


state 105

    (54) expressions -> expressions COMMA . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expression                     shift and go to state 122
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 106

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES . LPAR expressions RPAR

    LPAR            shift and go to state 123


state 107

    (36) conlist -> condition AND conlist .

    $end            reduce using rule 36 (conlist -> condition AND conlist .)
    ORDER           reduce using rule 36 (conlist -> condition AND conlist .)
    RPAR            reduce using rule 36 (conlist -> condition AND conlist .)


state 108

    (37) conlist -> condition OR conlist .

    $end            reduce using rule 37 (conlist -> condition OR conlist .)
    ORDER           reduce using rule 37 (conlist -> condition OR conlist .)
    RPAR            reduce using rule 37 (conlist -> condition OR conlist .)


state 109

    (38) conlist -> NAME BETWEEN number . AND number

    AND             shift and go to state 124


state 110

    (39) conlist -> NAME IN LPAR . select RPAR
    (11) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns
    (12) select -> . SELECT columns FROM tables WHERE conlist ORDER BY columns order_type
    (13) select -> . SELECT columns FROM tables WHERE conlist
    (14) select -> . SELECT columns FROM tables ORDER BY columns
    (15) select -> . SELECT columns FROM tables ORDER BY columns order_type
    (16) select -> . SELECT columns FROM tables
    (17) select -> . SELECT expression
    (18) select -> . SELECT expression FROM tables

    SELECT          shift and go to state 6

    select                         shift and go to state 125

state 111

    (47) condition -> column > column .

    AND             reduce using rule 47 (condition -> column > column .)
    OR              reduce using rule 47 (condition -> column > column .)
    $end            reduce using rule 47 (condition -> column > column .)
    ORDER           reduce using rule 47 (condition -> column > column .)
    RPAR            reduce using rule 47 (condition -> column > column .)


state 112

    (44) condition -> column > value .

    AND             reduce using rule 44 (condition -> column > value .)
    OR              reduce using rule 44 (condition -> column > value .)
    $end            reduce using rule 44 (condition -> column > value .)
    ORDER           reduce using rule 44 (condition -> column > value .)
    RPAR            reduce using rule 44 (condition -> column > value .)


state 113

    (48) condition -> column < column .

    AND             reduce using rule 48 (condition -> column < column .)
    OR              reduce using rule 48 (condition -> column < column .)
    $end            reduce using rule 48 (condition -> column < column .)
    ORDER           reduce using rule 48 (condition -> column < column .)
    RPAR            reduce using rule 48 (condition -> column < column .)


state 114

    (45) condition -> column < value .

    AND             reduce using rule 45 (condition -> column < value .)
    OR              reduce using rule 45 (condition -> column < value .)
    $end            reduce using rule 45 (condition -> column < value .)
    ORDER           reduce using rule 45 (condition -> column < value .)
    RPAR            reduce using rule 45 (condition -> column < value .)


state 115

    (49) condition -> column = column .

    AND             reduce using rule 49 (condition -> column = column .)
    OR              reduce using rule 49 (condition -> column = column .)
    $end            reduce using rule 49 (condition -> column = column .)
    ORDER           reduce using rule 49 (condition -> column = column .)
    RPAR            reduce using rule 49 (condition -> column = column .)


state 116

    (46) condition -> column = value .

    AND             reduce using rule 46 (condition -> column = value .)
    OR              reduce using rule 46 (condition -> column = value .)
    $end            reduce using rule 46 (condition -> column = value .)
    ORDER           reduce using rule 46 (condition -> column = value .)
    RPAR            reduce using rule 46 (condition -> column = value .)


state 117

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY . columns
    (12) select -> SELECT columns FROM tables WHERE conlist ORDER BY . columns order_type
    (21) columns -> . columns COMMA column
    (22) columns -> . column
    (23) column -> . *
    (24) column -> . NAME
    (25) column -> . NAME DOT NAME

    *               shift and go to state 13
    NAME            shift and go to state 16

    columns                        shift and go to state 126
    column                         shift and go to state 12

state 118

    (15) select -> SELECT columns FROM tables ORDER BY columns order_type .

    $end            reduce using rule 15 (select -> SELECT columns FROM tables ORDER BY columns order_type .)
    RPAR            reduce using rule 15 (select -> SELECT columns FROM tables ORDER BY columns order_type .)


state 119

    (19) order_type -> ASC .

    $end            reduce using rule 19 (order_type -> ASC .)
    RPAR            reduce using rule 19 (order_type -> ASC .)


state 120

    (20) order_type -> DESC .

    $end            reduce using rule 20 (order_type -> DESC .)
    RPAR            reduce using rule 20 (order_type -> DESC .)


state 121

    (6) update -> UPDATE table SET column = expression WHERE conlist .

    $end            reduce using rule 6 (update -> UPDATE table SET column = expression WHERE conlist .)


state 122

    (54) expressions -> expressions COMMA expression .
    (56) expression -> expression . + expression
    (57) expression -> expression . - expression
    (58) expression -> expression . * expression
    (59) expression -> expression . / expression

    RPAR            reduce using rule 54 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 54 (expressions -> expressions COMMA expression .)
    +               shift and go to state 37
    -               shift and go to state 38
    *               shift and go to state 39
    /               shift and go to state 40


state 123

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR . expressions RPAR
    (54) expressions -> . expressions COMMA expression
    (55) expressions -> . expression
    (56) expression -> . expression + expression
    (57) expression -> . expression - expression
    (58) expression -> . expression * expression
    (59) expression -> . expression / expression
    (60) expression -> . LPAR expression RPAR
    (61) expression -> . value
    (41) value -> . number
    (42) value -> . aggregate
    (43) value -> . texts
    (50) number -> . int
    (51) number -> . double
    (26) aggregate -> . SUM LPAR NAME RPAR
    (27) aggregate -> . AVG LPAR NAME RPAR
    (28) aggregate -> . MAX LPAR NAME RPAR
    (29) aggregate -> . MIN LPAR NAME RPAR
    (30) aggregate -> . COUNT LPAR NAME RPAR
    (40) texts -> . TEXT
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    LPAR            shift and go to state 14
    SUM             shift and go to state 22
    AVG             shift and go to state 23
    MAX             shift and go to state 24
    MIN             shift and go to state 25
    COUNT           shift and go to state 26
    TEXT            shift and go to state 27
    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    expressions                    shift and go to state 127
    expression                     shift and go to state 92
    value                          shift and go to state 15
    number                         shift and go to state 17
    aggregate                      shift and go to state 18
    texts                          shift and go to state 19
    int                            shift and go to state 20
    double                         shift and go to state 21

state 124

    (38) conlist -> NAME BETWEEN number AND . number
    (50) number -> . int
    (51) number -> . double
    (52) int -> . INTEGER
    (53) double -> . DOUBLE

    INTEGER         shift and go to state 28
    DOUBLE          shift and go to state 29

    number                         shift and go to state 128
    int                            shift and go to state 20
    double                         shift and go to state 21

state 125

    (39) conlist -> NAME IN LPAR select . RPAR

    RPAR            shift and go to state 129


state 126

    (11) select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .
    (12) select -> SELECT columns FROM tables WHERE conlist ORDER BY columns . order_type
    (21) columns -> columns . COMMA column
    (19) order_type -> . ASC
    (20) order_type -> . DESC

    $end            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    RPAR            reduce using rule 11 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns .)
    COMMA           shift and go to state 35
    ASC             shift and go to state 119
    DESC            shift and go to state 120

    order_type                     shift and go to state 130

state 127

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions . RPAR
    (54) expressions -> expressions . COMMA expression

    RPAR            shift and go to state 131
    COMMA           shift and go to state 105


state 128

    (38) conlist -> NAME BETWEEN number AND number .

    $end            reduce using rule 38 (conlist -> NAME BETWEEN number AND number .)
    ORDER           reduce using rule 38 (conlist -> NAME BETWEEN number AND number .)
    RPAR            reduce using rule 38 (conlist -> NAME BETWEEN number AND number .)


state 129

    (39) conlist -> NAME IN LPAR select RPAR .

    $end            reduce using rule 39 (conlist -> NAME IN LPAR select RPAR .)
    ORDER           reduce using rule 39 (conlist -> NAME IN LPAR select RPAR .)
    RPAR            reduce using rule 39 (conlist -> NAME IN LPAR select RPAR .)


state 130

    (12) select -> SELECT columns FROM tables WHERE conlist ORDER BY columns order_type .

    $end            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns order_type .)
    RPAR            reduce using rule 12 (select -> SELECT columns FROM tables WHERE conlist ORDER BY columns order_type .)


state 131

    (8) insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR .

    $end            reduce using rule 8 (insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR .)

