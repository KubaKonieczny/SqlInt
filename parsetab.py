
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "left+-left*/AND AS ASC AVG BETWEEN BY COMMA COUNT DELETE DESC DOT DOUBLE FROM IN INSERT INTEGER INTO LPAR MAX MIN NAME NOT OR ORDER RPAR SELECT SET SUM TEXT UPDATE VALUES WHEREquery : select\n            | update\n            | insert\n            | deleteupdate : UPDATE table SET column '=' expression\n                | UPDATE table SET column '=' expression WHERE conlist\n                insert : INSERT INTO table VALUES LPAR expressions RPAR\n                | INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPARdelete : DELETE FROM tables\n                | DELETE FROM tables WHERE conlist select : SELECT columns FROM tables WHERE conlist ORDER BY columns\n                | SELECT columns FROM tables WHERE conlist ORDER BY columns order_type\n                | SELECT columns FROM tables WHERE conlist\n                | SELECT columns FROM tables ORDER BY columns\n                | SELECT columns FROM tables ORDER BY columns order_type\n                | SELECT columns FROM tables\n                | SELECT expression\n                | SELECT expression FROM tablesorder_type : ASC\n                | DESC  columns : columns COMMA column\n                | column\n                 column :  '*'\n                | NAME\n                | NAME DOT NAME\n                 aggregate : SUM LPAR NAME RPAR\n                    | AVG LPAR NAME RPAR\n                    | MAX LPAR NAME RPAR\n                    | MIN LPAR NAME RPAR\n                    | COUNT LPAR NAME RPAR tables : table\n            | tables COMMA table table : NAME\n            | NAME AS NAME\n             conlist : condition\n                | condition AND conlist\n                | condition OR conlist\n                | NAME BETWEEN number AND number\n                | NAME IN LPAR select RPAR\n                 texts : TEXT\n                value :  number\n                | aggregate\n                | texts   condition : column '>' value\n                  | column '<' value\n                  | column '=' value\n                  | column '>' column\n                  | column '<' column\n                  | column '=' column\n                    number : int\n                | double int : INTEGERdouble : DOUBLE expressions : expressions COMMA expression\n                | expression expression : expression '+' expression\n                   | expression '-' expression\n                   | expression '*' expression\n                   | expression '/' expression\n                   | LPAR expression RPAR\n                   | value "
    
_lr_action_items = {'SELECT':([0,110,],[6,6,]),'UPDATE':([0,],[7,]),'INSERT':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,11,12,13,15,16,17,18,19,20,21,27,28,29,31,51,52,53,54,55,56,57,58,59,60,61,68,75,76,77,78,79,83,84,87,88,90,102,104,107,108,111,112,113,114,115,116,118,119,120,121,126,128,129,130,131,],[0,-1,-2,-3,-4,-17,-22,-23,-61,-24,-41,-42,-43,-50,-51,-40,-52,-53,-33,-9,-31,-16,-21,-18,-56,-57,-58,-59,-60,-25,-34,-26,-27,-28,-29,-30,-10,-35,-32,-13,-5,-14,-7,-36,-37,-47,-44,-48,-45,-49,-46,-15,-19,-20,-6,-11,-38,-39,-12,-8,]),'LPAR':([6,14,22,23,24,25,26,31,37,38,39,40,50,68,69,80,81,97,105,106,123,],[14,14,43,44,45,46,47,-33,14,14,14,14,70,-34,81,14,14,110,14,123,14,]),'*':([6,11,15,17,18,19,20,21,27,28,29,35,41,48,56,57,58,59,60,70,71,73,75,76,77,78,79,89,90,92,94,95,98,99,100,103,117,122,],[13,39,-61,-41,-42,-43,-50,-51,-40,-52,-53,13,39,13,39,39,-58,-59,-60,13,13,13,-26,-27,-28,-29,-30,13,39,39,13,13,13,13,13,13,13,39,]),'NAME':([6,7,32,33,34,35,36,42,43,44,45,46,47,48,49,70,71,72,73,89,94,95,98,99,100,103,117,],[16,31,31,31,31,16,31,61,62,63,64,65,66,16,68,16,85,31,85,16,85,85,16,16,16,85,16,]),'SUM':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[22,22,22,22,22,22,22,22,22,22,22,22,22,]),'AVG':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[23,23,23,23,23,23,23,23,23,23,23,23,23,]),'MAX':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MIN':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[25,25,25,25,25,25,25,25,25,25,25,25,25,]),'COUNT':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TEXT':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[27,27,27,27,27,27,27,27,27,27,27,27,27,]),'INTEGER':([6,14,37,38,39,40,80,81,96,98,99,100,105,123,124,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'DOUBLE':([6,14,37,38,39,40,80,81,96,98,99,100,105,123,124,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'INTO':([8,],[32,]),'FROM':([9,10,11,12,13,15,16,17,18,19,20,21,27,28,29,54,56,57,58,59,60,61,75,76,77,78,79,],[33,34,36,-22,-23,-61,-24,-41,-42,-43,-50,-51,-40,-52,-53,-21,-56,-57,-58,-59,-60,-25,-26,-27,-28,-29,-30,]),'COMMA':([10,12,13,15,16,17,18,19,20,21,27,28,29,31,51,52,53,54,55,56,57,58,59,60,61,68,75,76,77,78,79,82,87,91,92,102,122,126,127,],[35,-22,-23,-61,-24,-41,-42,-43,-50,-51,-40,-52,-53,-33,72,-31,72,-21,72,-56,-57,-58,-59,-60,-25,-34,-26,-27,-28,-29,-30,35,-32,105,-55,35,-54,35,105,]),'RPAR':([11,12,13,15,16,17,18,19,20,21,27,28,29,31,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,75,76,77,78,79,82,84,87,88,91,92,102,107,108,111,112,113,114,115,116,118,119,120,122,125,126,127,128,129,130,],[-17,-22,-23,-61,-24,-41,-42,-43,-50,-51,-40,-52,-53,-33,60,-31,-16,-21,-18,-56,-57,-58,-59,-60,-25,75,76,77,78,79,-34,-26,-27,-28,-29,-30,93,-35,-32,-13,104,-55,-14,-36,-37,-47,-44,-48,-45,-49,-46,-15,-19,-20,-54,129,-11,131,-38,-39,-12,]),'+':([11,15,17,18,19,20,21,27,28,29,41,56,57,58,59,60,75,76,77,78,79,90,92,122,],[37,-61,-41,-42,-43,-50,-51,-40,-52,-53,37,-56,-57,-58,-59,-60,-26,-27,-28,-29,-30,37,37,37,]),'-':([11,15,17,18,19,20,21,27,28,29,41,56,57,58,59,60,75,76,77,78,79,90,92,122,],[38,-61,-41,-42,-43,-50,-51,-40,-52,-53,38,-56,-57,-58,-59,-60,-26,-27,-28,-29,-30,38,38,38,]),'/':([11,15,17,18,19,20,21,27,28,29,41,56,57,58,59,60,75,76,77,78,79,90,92,122,],[40,-61,-41,-42,-43,-50,-51,-40,-52,-53,40,40,40,-58,-59,-60,-26,-27,-28,-29,-30,40,40,40,]),'ASC':([12,13,16,54,61,102,126,],[-22,-23,-24,-21,-25,119,119,]),'DESC':([12,13,16,54,61,102,126,],[-22,-23,-24,-21,-25,120,120,]),'=':([13,16,61,67,85,86,],[-23,-24,-25,80,-24,100,]),'>':([13,61,85,86,],[-23,-25,-24,98,]),'<':([13,61,85,86,],[-23,-25,-24,99,]),'AND':([13,16,17,18,19,20,21,27,28,29,61,75,76,77,78,79,84,109,111,112,113,114,115,116,],[-23,-24,-41,-42,-43,-50,-51,-40,-52,-53,-25,-26,-27,-28,-29,-30,94,124,-47,-44,-48,-45,-49,-46,]),'OR':([13,16,17,18,19,20,21,27,28,29,61,75,76,77,78,79,84,111,112,113,114,115,116,],[-23,-24,-41,-42,-43,-50,-51,-40,-52,-53,-25,-26,-27,-28,-29,-30,95,-47,-44,-48,-45,-49,-46,]),'ORDER':([13,16,17,18,19,20,21,27,28,29,31,52,53,61,68,75,76,77,78,79,84,87,88,107,108,111,112,113,114,115,116,128,129,],[-23,-24,-41,-42,-43,-50,-51,-40,-52,-53,-33,-31,74,-25,-34,-26,-27,-28,-29,-30,-35,-32,101,-36,-37,-47,-44,-48,-45,-49,-46,-38,-39,]),'WHERE':([15,17,18,19,20,21,27,28,29,31,51,52,53,56,57,58,59,60,68,75,76,77,78,79,87,90,],[-61,-41,-42,-43,-50,-51,-40,-52,-53,-33,71,-31,73,-56,-57,-58,-59,-60,-34,-26,-27,-28,-29,-30,-32,103,]),'DOT':([16,85,],[42,42,]),'SET':([30,31,68,],[48,-33,-34,]),'VALUES':([31,50,68,93,],[-33,69,-34,106,]),'AS':([31,],[49,]),'BY':([74,101,],[89,117,]),'BETWEEN':([85,],[96,]),'IN':([85,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select':([0,110,],[2,125,]),'update':([0,],[3,]),'insert':([0,],[4,]),'delete':([0,],[5,]),'columns':([6,70,89,117,],[10,82,102,126,]),'expression':([6,14,37,38,39,40,80,81,105,123,],[11,41,56,57,58,59,90,92,122,92,]),'column':([6,35,48,70,71,73,89,94,95,98,99,100,103,117,],[12,54,67,12,86,86,12,86,86,111,113,115,86,12,]),'value':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[15,15,15,15,15,15,15,15,112,114,116,15,15,]),'number':([6,14,37,38,39,40,80,81,96,98,99,100,105,123,124,],[17,17,17,17,17,17,17,17,109,17,17,17,17,17,128,]),'aggregate':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'texts':([6,14,37,38,39,40,80,81,98,99,100,105,123,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'int':([6,14,37,38,39,40,80,81,96,98,99,100,105,123,124,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'double':([6,14,37,38,39,40,80,81,96,98,99,100,105,123,124,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'table':([7,32,33,34,36,72,],[30,50,52,52,52,87,]),'tables':([33,34,36,],[51,53,55,]),'conlist':([71,73,94,95,103,],[83,88,107,108,121,]),'condition':([71,73,94,95,103,],[84,84,84,84,84,]),'expressions':([81,123,],[91,127,]),'order_type':([102,126,],[118,130,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','main.py',240),
  ('query -> update','query',1,'p_query','main.py',241),
  ('query -> insert','query',1,'p_query','main.py',242),
  ('query -> delete','query',1,'p_query','main.py',243),
  ('update -> UPDATE table SET column = expression','update',6,'p_update','main.py',247),
  ('update -> UPDATE table SET column = expression WHERE conlist','update',8,'p_update','main.py',248),
  ('insert -> INSERT INTO table VALUES LPAR expressions RPAR','insert',7,'p_insert','main.py',261),
  ('insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR','insert',10,'p_insert','main.py',262),
  ('delete -> DELETE FROM tables','delete',3,'p_delete','main.py',277),
  ('delete -> DELETE FROM tables WHERE conlist','delete',5,'p_delete','main.py',278),
  ('select -> SELECT columns FROM tables WHERE conlist ORDER BY columns','select',9,'p_select','main.py',289),
  ('select -> SELECT columns FROM tables WHERE conlist ORDER BY columns order_type','select',10,'p_select','main.py',290),
  ('select -> SELECT columns FROM tables WHERE conlist','select',6,'p_select','main.py',291),
  ('select -> SELECT columns FROM tables ORDER BY columns','select',7,'p_select','main.py',292),
  ('select -> SELECT columns FROM tables ORDER BY columns order_type','select',8,'p_select','main.py',293),
  ('select -> SELECT columns FROM tables','select',4,'p_select','main.py',294),
  ('select -> SELECT expression','select',2,'p_select','main.py',295),
  ('select -> SELECT expression FROM tables','select',4,'p_select','main.py',296),
  ('order_type -> ASC','order_type',1,'p_order_type','main.py',328),
  ('order_type -> DESC','order_type',1,'p_order_type','main.py',329),
  ('columns -> columns COMMA column','columns',3,'p_columns','main.py',333),
  ('columns -> column','columns',1,'p_columns','main.py',334),
  ('column -> *','column',1,'p_column','main.py',347),
  ('column -> NAME','column',1,'p_column','main.py',348),
  ('column -> NAME DOT NAME','column',3,'p_column','main.py',349),
  ('aggregate -> SUM LPAR NAME RPAR','aggregate',4,'p_aggregate','main.py',358),
  ('aggregate -> AVG LPAR NAME RPAR','aggregate',4,'p_aggregate','main.py',359),
  ('aggregate -> MAX LPAR NAME RPAR','aggregate',4,'p_aggregate','main.py',360),
  ('aggregate -> MIN LPAR NAME RPAR','aggregate',4,'p_aggregate','main.py',361),
  ('aggregate -> COUNT LPAR NAME RPAR','aggregate',4,'p_aggregate','main.py',362),
  ('tables -> table','tables',1,'p_tables','main.py',366),
  ('tables -> tables COMMA table','tables',3,'p_tables','main.py',367),
  ('table -> NAME','table',1,'p_table','main.py',380),
  ('table -> NAME AS NAME','table',3,'p_table','main.py',381),
  ('conlist -> condition','conlist',1,'p_conlist','main.py',387),
  ('conlist -> condition AND conlist','conlist',3,'p_conlist','main.py',388),
  ('conlist -> condition OR conlist','conlist',3,'p_conlist','main.py',389),
  ('conlist -> NAME BETWEEN number AND number','conlist',5,'p_conlist','main.py',390),
  ('conlist -> NAME IN LPAR select RPAR','conlist',5,'p_conlist','main.py',391),
  ('texts -> TEXT','texts',1,'p_texts','main.py',403),
  ('value -> number','value',1,'p_value','main.py',410),
  ('value -> aggregate','value',1,'p_value','main.py',411),
  ('value -> texts','value',1,'p_value','main.py',412),
  ('condition -> column > value','condition',3,'p_condition','main.py',423),
  ('condition -> column < value','condition',3,'p_condition','main.py',424),
  ('condition -> column = value','condition',3,'p_condition','main.py',425),
  ('condition -> column > column','condition',3,'p_condition','main.py',426),
  ('condition -> column < column','condition',3,'p_condition','main.py',427),
  ('condition -> column = column','condition',3,'p_condition','main.py',428),
  ('number -> int','number',1,'p_number','main.py',437),
  ('number -> double','number',1,'p_number','main.py',438),
  ('int -> INTEGER','int',1,'p_int','main.py',441),
  ('double -> DOUBLE','double',1,'p_double','main.py',446),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','main.py',450),
  ('expressions -> expression','expressions',1,'p_expressions','main.py',451),
  ('expression -> expression + expression','expression',3,'p_expression','main.py',463),
  ('expression -> expression - expression','expression',3,'p_expression','main.py',464),
  ('expression -> expression * expression','expression',3,'p_expression','main.py',465),
  ('expression -> expression / expression','expression',3,'p_expression','main.py',466),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression','main.py',467),
  ('expression -> value','expression',1,'p_expression','main.py',468),
]
