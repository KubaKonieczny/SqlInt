
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AS AVG BETWEEN BY COMMA COUNT DELETE DOT DOUBLE FROM IN INSERT INTEGER INTO LPAR MAX MIN NAME NOT OR ORDER RPAR SELECT SET SUM TEXT UPDATE VALUES WHEREquery : select\n            | update\n            | insert\n            | deleteupdate : UPDATE table SET column '=' expression\n                | UPDATE table SET column '=' expression WHERE conlist\n                insert : INSERT INTO table VALUES LPAR expressions RPAR\n                | INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPARdelete : DELETE FROM tables\n                | DELETE FROM tables WHERE conlist select : SELECT columns FROM tables WHERE conlist ORDER BY columns\n                | SELECT columns FROM tables WHERE conlist\n                | SELECT columns FROM tables ORDER BY columns\n                | SELECT columns FROM tables\n                | SELECT expression\n                | SELECT expression FROM tables columns : columns COMMA column\n                | column\n                 column :  '*'\n                | NAME\n                | NAME DOT NAME\n                 aggregate : SUM LPAR TEXT RPAR\n                    | AVG LPAR TEXT RPAR\n                    | MAX LPAR TEXT RPAR\n                    | MIN LPAR TEXT RPAR\n                    | COUNT LPAR TEXT RPAR tables : table\n            | tables COMMA table table : NAME\n            | NAME AS NAME\n             conlist : condition\n                | NOT condition\n                | condition AND condition\n                | condition OR condition\n                | NAME BETWEEN number AND number\n                | NAME IN LPAR select RPAR\n                 texts : TEXT\n                value :  number\n                | aggregate\n                | texts   condition : column '>' value\n                  | column '<' value\n                  | column '=' value\n                  | column '>' column\n                  | column '<' column\n                  | column '=' column\n                    number : int\n                | double int : INTEGERdouble : DOUBLE expressions : expressions COMMA expression\n                | expression expression : expression '+' value\n                   | expression '-' value\n                   | value "
    
_lr_action_items = {'SELECT':([0,105,],[6,6,]),'UPDATE':([0,],[7,]),'INSERT':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,11,12,13,14,15,16,17,18,19,20,22,27,28,30,47,48,49,50,51,52,53,54,61,68,69,70,71,72,76,77,81,82,84,90,97,99,102,103,106,107,108,109,110,111,113,118,120,121,122,],[0,-1,-2,-3,-4,-15,-18,-55,-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-29,-9,-27,-14,-17,-16,-53,-54,-21,-30,-22,-23,-24,-25,-26,-10,-31,-28,-12,-5,-32,-13,-7,-33,-34,-44,-41,-45,-42,-46,-43,-6,-11,-35,-36,-8,]),'*':([6,34,44,63,64,66,78,83,88,89,93,94,95,98,112,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NAME':([6,7,31,32,33,34,35,38,44,45,63,64,65,66,78,83,88,89,93,94,95,98,112,],[15,30,30,30,30,15,30,54,15,61,15,79,30,79,15,15,15,15,15,15,15,79,15,]),'SUM':([6,36,37,73,74,93,94,95,100,115,],[21,21,21,21,21,21,21,21,21,21,]),'AVG':([6,36,37,73,74,93,94,95,100,115,],[23,23,23,23,23,23,23,23,23,23,]),'MAX':([6,36,37,73,74,93,94,95,100,115,],[24,24,24,24,24,24,24,24,24,24,]),'MIN':([6,36,37,73,74,93,94,95,100,115,],[25,25,25,25,25,25,25,25,25,25,]),'COUNT':([6,36,37,73,74,93,94,95,100,115,],[26,26,26,26,26,26,26,26,26,26,]),'TEXT':([6,36,37,39,40,41,42,43,73,74,93,94,95,100,115,],[22,22,22,55,56,57,58,59,22,22,22,22,22,22,22,]),'INTEGER':([6,36,37,73,74,91,93,94,95,100,115,116,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'DOUBLE':([6,36,37,73,74,91,93,94,95,100,115,116,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'INTO':([8,],[31,]),'FROM':([9,10,11,12,13,14,15,16,17,18,19,20,22,27,28,50,52,53,54,68,69,70,71,72,],[32,33,35,-18,-55,-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-17,-53,-54,-21,-22,-23,-24,-25,-26,]),'COMMA':([10,12,13,14,15,16,17,18,19,20,22,27,28,30,47,48,49,50,51,52,53,54,61,68,69,70,71,72,75,81,85,86,97,114,118,119,],[34,-18,-55,-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-29,65,-27,65,-17,65,-53,-54,-21,-30,-22,-23,-24,-25,-26,34,-28,100,-52,34,-51,34,100,]),'RPAR':([11,12,13,14,15,16,17,18,19,20,22,27,28,30,48,49,50,51,52,53,54,55,56,57,58,59,61,68,69,70,71,72,75,77,81,82,85,86,90,97,102,103,106,107,108,109,110,111,114,117,118,119,120,121,],[-15,-18,-55,-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-29,-27,-14,-17,-16,-53,-54,-21,68,69,70,71,72,-30,-22,-23,-24,-25,-26,87,-31,-28,-12,99,-52,-32,-13,-33,-34,-44,-41,-45,-42,-46,-43,-51,121,-11,122,-35,-36,]),'+':([11,13,16,17,18,19,20,22,27,28,52,53,68,69,70,71,72,84,86,114,],[36,-55,-38,-39,-40,-47,-48,-37,-49,-50,-53,-54,-22,-23,-24,-25,-26,36,36,36,]),'-':([11,13,16,17,18,19,20,22,27,28,52,53,68,69,70,71,72,84,86,114,],[37,-55,-38,-39,-40,-47,-48,-37,-49,-50,-53,-54,-22,-23,-24,-25,-26,37,37,37,]),'WHERE':([13,16,17,18,19,20,22,27,28,30,47,48,49,52,53,61,68,69,70,71,72,81,84,],[-55,-38,-39,-40,-47,-48,-37,-49,-50,-29,64,-27,66,-53,-54,-30,-22,-23,-24,-25,-26,-28,98,]),'=':([14,15,54,60,79,80,],[-19,-20,-21,73,-20,95,]),'>':([14,15,54,79,80,],[-19,-20,-21,-20,93,]),'<':([14,15,54,79,80,],[-19,-20,-21,-20,94,]),'AND':([14,15,16,17,18,19,20,22,27,28,54,68,69,70,71,72,77,104,106,107,108,109,110,111,],[-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-21,-22,-23,-24,-25,-26,88,116,-44,-41,-45,-42,-46,-43,]),'OR':([14,15,16,17,18,19,20,22,27,28,54,68,69,70,71,72,77,106,107,108,109,110,111,],[-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-21,-22,-23,-24,-25,-26,89,-44,-41,-45,-42,-46,-43,]),'ORDER':([14,15,16,17,18,19,20,22,27,28,30,48,49,54,61,68,69,70,71,72,77,81,82,90,102,103,106,107,108,109,110,111,120,121,],[-19,-20,-38,-39,-40,-47,-48,-37,-49,-50,-29,-27,67,-21,-30,-22,-23,-24,-25,-26,-31,-28,96,-32,-33,-34,-44,-41,-45,-42,-46,-43,-35,-36,]),'DOT':([15,79,],[38,38,]),'LPAR':([21,23,24,25,26,30,46,61,62,92,101,],[39,40,41,42,43,-29,63,-30,74,105,115,]),'SET':([29,30,61,],[44,-29,-30,]),'VALUES':([30,46,61,87,],[-29,62,-30,101,]),'AS':([30,],[45,]),'NOT':([64,66,98,],[78,78,78,]),'BY':([67,96,],[83,112,]),'BETWEEN':([79,],[91,]),'IN':([79,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select':([0,105,],[2,117,]),'update':([0,],[3,]),'insert':([0,],[4,]),'delete':([0,],[5,]),'columns':([6,63,83,112,],[10,75,97,118,]),'expression':([6,73,74,100,115,],[11,84,86,114,86,]),'column':([6,34,44,63,64,66,78,83,88,89,93,94,95,98,112,],[12,50,60,12,80,80,80,12,80,80,106,108,110,80,12,]),'value':([6,36,37,73,74,93,94,95,100,115,],[13,52,53,13,13,107,109,111,13,13,]),'number':([6,36,37,73,74,91,93,94,95,100,115,116,],[16,16,16,16,16,104,16,16,16,16,16,120,]),'aggregate':([6,36,37,73,74,93,94,95,100,115,],[17,17,17,17,17,17,17,17,17,17,]),'texts':([6,36,37,73,74,93,94,95,100,115,],[18,18,18,18,18,18,18,18,18,18,]),'int':([6,36,37,73,74,91,93,94,95,100,115,116,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'double':([6,36,37,73,74,91,93,94,95,100,115,116,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'table':([7,31,32,33,35,65,],[29,46,48,48,48,81,]),'tables':([32,33,35,],[47,49,51,]),'conlist':([64,66,98,],[76,82,113,]),'condition':([64,66,78,88,89,98,],[77,77,90,102,103,77,]),'expressions':([74,115,],[85,119,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','main.py',221),
  ('query -> update','query',1,'p_query','main.py',222),
  ('query -> insert','query',1,'p_query','main.py',223),
  ('query -> delete','query',1,'p_query','main.py',224),
  ('update -> UPDATE table SET column = expression','update',6,'p_update','main.py',228),
  ('update -> UPDATE table SET column = expression WHERE conlist','update',8,'p_update','main.py',229),
  ('insert -> INSERT INTO table VALUES LPAR expressions RPAR','insert',7,'p_insert','main.py',242),
  ('insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR','insert',10,'p_insert','main.py',243),
  ('delete -> DELETE FROM tables','delete',3,'p_delete','main.py',258),
  ('delete -> DELETE FROM tables WHERE conlist','delete',5,'p_delete','main.py',259),
  ('select -> SELECT columns FROM tables WHERE conlist ORDER BY columns','select',9,'p_select','main.py',270),
  ('select -> SELECT columns FROM tables WHERE conlist','select',6,'p_select','main.py',271),
  ('select -> SELECT columns FROM tables ORDER BY columns','select',7,'p_select','main.py',272),
  ('select -> SELECT columns FROM tables','select',4,'p_select','main.py',273),
  ('select -> SELECT expression','select',2,'p_select','main.py',274),
  ('select -> SELECT expression FROM tables','select',4,'p_select','main.py',275),
  ('columns -> columns COMMA column','columns',3,'p_columns','main.py',301),
  ('columns -> column','columns',1,'p_columns','main.py',302),
  ('column -> *','column',1,'p_column','main.py',315),
  ('column -> NAME','column',1,'p_column','main.py',316),
  ('column -> NAME DOT NAME','column',3,'p_column','main.py',317),
  ('aggregate -> SUM LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',326),
  ('aggregate -> AVG LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',327),
  ('aggregate -> MAX LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',328),
  ('aggregate -> MIN LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',329),
  ('aggregate -> COUNT LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',330),
  ('tables -> table','tables',1,'p_tables','main.py',334),
  ('tables -> tables COMMA table','tables',3,'p_tables','main.py',335),
  ('table -> NAME','table',1,'p_table','main.py',348),
  ('table -> NAME AS NAME','table',3,'p_table','main.py',349),
  ('conlist -> condition','conlist',1,'p_conlist','main.py',355),
  ('conlist -> NOT condition','conlist',2,'p_conlist','main.py',356),
  ('conlist -> condition AND condition','conlist',3,'p_conlist','main.py',357),
  ('conlist -> condition OR condition','conlist',3,'p_conlist','main.py',358),
  ('conlist -> NAME BETWEEN number AND number','conlist',5,'p_conlist','main.py',359),
  ('conlist -> NAME IN LPAR select RPAR','conlist',5,'p_conlist','main.py',360),
  ('texts -> TEXT','texts',1,'p_texts','main.py',365),
  ('value -> number','value',1,'p_value','main.py',371),
  ('value -> aggregate','value',1,'p_value','main.py',372),
  ('value -> texts','value',1,'p_value','main.py',373),
  ('condition -> column > value','condition',3,'p_condition','main.py',384),
  ('condition -> column < value','condition',3,'p_condition','main.py',385),
  ('condition -> column = value','condition',3,'p_condition','main.py',386),
  ('condition -> column > column','condition',3,'p_condition','main.py',387),
  ('condition -> column < column','condition',3,'p_condition','main.py',388),
  ('condition -> column = column','condition',3,'p_condition','main.py',389),
  ('number -> int','number',1,'p_number','main.py',398),
  ('number -> double','number',1,'p_number','main.py',399),
  ('int -> INTEGER','int',1,'p_int','main.py',402),
  ('double -> DOUBLE','double',1,'p_double','main.py',407),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','main.py',411),
  ('expressions -> expression','expressions',1,'p_expressions','main.py',412),
  ('expression -> expression + value','expression',3,'p_expression','main.py',424),
  ('expression -> expression - value','expression',3,'p_expression','main.py',425),
  ('expression -> value','expression',1,'p_expression','main.py',426),
]
