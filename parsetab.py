
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AS AVG BETWEEN BY COMMA COUNT DELETE DOT DOUBLE FROM IN INSERT INTEGER LPAR MAX MIN NOT OR ORDER PUNCTUATION RPAR SELECT SET SUM TEXT UPDATE VALUES WHEREquery : select\n            | update\n            | insert\n            | deleteupdate : UPDATE table SET column '=' expression\n                | UPDATE table SET column '=' expression WHERE conlist\n                insert : INSERT table VALUES LPAR expressions RPAR\n                | INSERT table LPAR columns RPAR VALUES LPAR expressions RPARdelete : DELETE FROM tables\n                | DELETE FROM tables WHERE conlist select : SELECT columns FROM tables WHERE conlist ORDER BY columns\n                | SELECT columns FROM tables WHERE conlist\n                | SELECT columns FROM tables ORDER BY columns\n                | SELECT columns FROM tables\n                | SELECT expression\n                | SELECT expression FROM tables columns : columns COMMA column\n                | column\n                 column :  '*'\n                | TEXT\n                | TEXT DOT TEXT\n                 aggregate : SUM LPAR TEXT RPAR\n                    | AVG LPAR TEXT RPAR\n                    | MAX LPAR TEXT RPAR\n                    | MIN LPAR TEXT RPAR\n                    | COUNT LPAR TEXT RPAR tables : table\n            | tables COMMA table table : TEXT\n            | TEXT AS TEXT\n             conlist : condition\n                | NOT condition\n                | condition AND condition\n                | condition OR condition\n                | TEXT BETWEEN number AND number\n                | TEXT IN LPAR select RPAR\n                 texts : TEXT\n                | texts TEXT value :  number\n                | aggregate\n                | PUNCTUATION texts PUNCTUATION   condition : column '>' value\n                  | column '<' value\n                  | column '=' value\n                  | column '>' column\n                  | column '<' column\n                  | column '=' column\n                    number : int\n                | double int : INTEGERdouble : DOUBLE expressions : expressions COMMA expression\n                | expression expression : expression '+' value\n                   | expression '-' value\n                   | value "
    
_lr_action_items = {'SELECT':([0,109,],[6,6,]),'UPDATE':([0,],[7,]),'INSERT':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,11,12,13,14,15,16,17,19,20,26,27,29,49,50,51,52,53,54,55,56,57,65,72,73,74,75,76,81,82,86,87,89,90,95,102,106,107,110,111,112,113,114,115,117,121,122,123,124,],[0,-1,-2,-3,-4,-15,-18,-56,-19,-20,-39,-40,-48,-49,-50,-51,-29,-9,-27,-14,-17,-16,-54,-55,-21,-41,-30,-22,-23,-24,-25,-26,-10,-31,-28,-12,-5,-7,-32,-13,-33,-34,-45,-42,-46,-43,-47,-44,-6,-11,-8,-35,-36,]),'*':([6,33,45,48,68,70,83,88,93,94,98,99,100,103,116,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'TEXT':([6,7,8,18,31,32,33,34,37,38,39,40,41,42,43,44,45,46,48,58,68,69,70,83,88,93,94,98,99,100,103,116,],[15,29,29,39,29,29,15,29,56,58,-37,59,60,61,62,63,15,65,15,-38,84,29,84,15,15,15,15,15,15,15,84,15,]),'PUNCTUATION':([6,35,36,38,39,58,66,77,91,98,99,100,105,],[18,18,18,57,-37,-38,18,18,18,18,18,18,18,]),'SUM':([6,35,36,66,77,91,98,99,100,105,],[21,21,21,21,21,21,21,21,21,21,]),'AVG':([6,35,36,66,77,91,98,99,100,105,],[22,22,22,22,22,22,22,22,22,22,]),'MAX':([6,35,36,66,77,91,98,99,100,105,],[23,23,23,23,23,23,23,23,23,23,]),'MIN':([6,35,36,66,77,91,98,99,100,105,],[24,24,24,24,24,24,24,24,24,24,]),'COUNT':([6,35,36,66,77,91,98,99,100,105,],[25,25,25,25,25,25,25,25,25,25,]),'INTEGER':([6,35,36,66,77,91,96,98,99,100,105,119,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'DOUBLE':([6,35,36,66,77,91,96,98,99,100,105,119,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'FROM':([9,10,11,12,13,14,15,16,17,19,20,26,27,52,54,55,56,57,72,73,74,75,76,],[31,32,34,-18,-56,-19,-20,-39,-40,-48,-49,-50,-51,-17,-54,-55,-21,-41,-22,-23,-24,-25,-26,]),'COMMA':([10,12,13,14,15,16,17,19,20,26,27,29,49,50,51,52,53,54,55,56,57,65,67,72,73,74,75,76,78,79,86,102,104,118,121,],[33,-18,-56,-19,-20,-39,-40,-48,-49,-50,-51,-29,69,-27,69,-17,69,-54,-55,-21,-41,-30,33,-22,-23,-24,-25,-26,91,-53,-28,33,-52,91,33,]),'RPAR':([11,12,13,14,15,16,17,19,20,26,27,29,50,51,52,53,54,55,56,57,59,60,61,62,63,65,67,72,73,74,75,76,78,79,82,86,87,95,102,104,106,107,110,111,112,113,114,115,118,120,121,123,124,],[-15,-18,-56,-19,-20,-39,-40,-48,-49,-50,-51,-29,-27,-14,-17,-16,-54,-55,-21,-41,72,73,74,75,76,-30,80,-22,-23,-24,-25,-26,90,-53,-31,-28,-12,-32,-13,-52,-33,-34,-45,-42,-46,-43,-47,-44,122,124,-11,-35,-36,]),'+':([11,13,16,17,19,20,26,27,54,55,57,72,73,74,75,76,79,89,104,],[35,-56,-39,-40,-48,-49,-50,-51,-54,-55,-41,-22,-23,-24,-25,-26,35,35,35,]),'-':([11,13,16,17,19,20,26,27,54,55,57,72,73,74,75,76,79,89,104,],[36,-56,-39,-40,-48,-49,-50,-51,-54,-55,-41,-22,-23,-24,-25,-26,36,36,36,]),'WHERE':([13,16,17,19,20,26,27,29,49,50,51,54,55,57,65,72,73,74,75,76,86,89,],[-56,-39,-40,-48,-49,-50,-51,-29,68,-27,70,-54,-55,-41,-30,-22,-23,-24,-25,-26,-28,103,]),'=':([14,15,56,64,84,85,],[-19,-20,-21,77,-20,100,]),'>':([14,15,56,84,85,],[-19,-20,-21,-20,98,]),'<':([14,15,56,84,85,],[-19,-20,-21,-20,99,]),'AND':([14,15,16,17,19,20,26,27,56,57,72,73,74,75,76,82,108,110,111,112,113,114,115,],[-19,-20,-39,-40,-48,-49,-50,-51,-21,-41,-22,-23,-24,-25,-26,93,119,-45,-42,-46,-43,-47,-44,]),'OR':([14,15,16,17,19,20,26,27,56,57,72,73,74,75,76,82,110,111,112,113,114,115,],[-19,-20,-39,-40,-48,-49,-50,-51,-21,-41,-22,-23,-24,-25,-26,94,-45,-42,-46,-43,-47,-44,]),'ORDER':([14,15,16,17,19,20,26,27,29,50,51,56,57,65,72,73,74,75,76,82,86,87,95,106,107,110,111,112,113,114,115,123,124,],[-19,-20,-39,-40,-48,-49,-50,-51,-29,-27,71,-21,-41,-30,-22,-23,-24,-25,-26,-31,-28,101,-32,-33,-34,-45,-42,-46,-43,-47,-44,-35,-36,]),'DOT':([15,84,],[37,37,]),'LPAR':([21,22,23,24,25,29,30,47,65,92,97,],[40,41,42,43,44,-29,48,66,-30,105,109,]),'SET':([28,29,65,],[45,-29,-30,]),'VALUES':([29,30,65,80,],[-29,47,-30,92,]),'AS':([29,],[46,]),'NOT':([68,70,103,],[83,83,83,]),'BY':([71,101,],[88,116,]),'BETWEEN':([84,],[96,]),'IN':([84,],[97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select':([0,109,],[2,120,]),'update':([0,],[3,]),'insert':([0,],[4,]),'delete':([0,],[5,]),'columns':([6,48,88,116,],[10,67,102,121,]),'expression':([6,66,77,91,105,],[11,79,89,104,79,]),'column':([6,33,45,48,68,70,83,88,93,94,98,99,100,103,116,],[12,52,64,12,85,85,85,12,85,85,110,112,114,85,12,]),'value':([6,35,36,66,77,91,98,99,100,105,],[13,54,55,13,13,13,111,113,115,13,]),'number':([6,35,36,66,77,91,96,98,99,100,105,119,],[16,16,16,16,16,16,108,16,16,16,16,123,]),'aggregate':([6,35,36,66,77,91,98,99,100,105,],[17,17,17,17,17,17,17,17,17,17,]),'int':([6,35,36,66,77,91,96,98,99,100,105,119,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'double':([6,35,36,66,77,91,96,98,99,100,105,119,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'table':([7,8,31,32,34,69,],[28,30,50,50,50,86,]),'texts':([18,],[38,]),'tables':([31,32,34,],[49,51,53,]),'expressions':([66,105,],[78,118,]),'conlist':([68,70,103,],[81,87,117,]),'condition':([68,70,83,93,94,103,],[82,82,95,106,107,82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','main.py',214),
  ('query -> update','query',1,'p_query','main.py',215),
  ('query -> insert','query',1,'p_query','main.py',216),
  ('query -> delete','query',1,'p_query','main.py',217),
  ('update -> UPDATE table SET column = expression','update',6,'p_update','main.py',221),
  ('update -> UPDATE table SET column = expression WHERE conlist','update',8,'p_update','main.py',222),
  ('insert -> INSERT table VALUES LPAR expressions RPAR','insert',6,'p_insert','main.py',227),
  ('insert -> INSERT table LPAR columns RPAR VALUES LPAR expressions RPAR','insert',9,'p_insert','main.py',228),
  ('delete -> DELETE FROM tables','delete',3,'p_delete','main.py',232),
  ('delete -> DELETE FROM tables WHERE conlist','delete',5,'p_delete','main.py',233),
  ('select -> SELECT columns FROM tables WHERE conlist ORDER BY columns','select',9,'p_select','main.py',237),
  ('select -> SELECT columns FROM tables WHERE conlist','select',6,'p_select','main.py',238),
  ('select -> SELECT columns FROM tables ORDER BY columns','select',7,'p_select','main.py',239),
  ('select -> SELECT columns FROM tables','select',4,'p_select','main.py',240),
  ('select -> SELECT expression','select',2,'p_select','main.py',241),
  ('select -> SELECT expression FROM tables','select',4,'p_select','main.py',242),
  ('columns -> columns COMMA column','columns',3,'p_columns','main.py',268),
  ('columns -> column','columns',1,'p_columns','main.py',269),
  ('column -> *','column',1,'p_column','main.py',282),
  ('column -> TEXT','column',1,'p_column','main.py',283),
  ('column -> TEXT DOT TEXT','column',3,'p_column','main.py',284),
  ('aggregate -> SUM LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',293),
  ('aggregate -> AVG LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',294),
  ('aggregate -> MAX LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',295),
  ('aggregate -> MIN LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',296),
  ('aggregate -> COUNT LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',297),
  ('tables -> table','tables',1,'p_tables','main.py',301),
  ('tables -> tables COMMA table','tables',3,'p_tables','main.py',302),
  ('table -> TEXT','table',1,'p_table','main.py',315),
  ('table -> TEXT AS TEXT','table',3,'p_table','main.py',316),
  ('conlist -> condition','conlist',1,'p_conlist','main.py',322),
  ('conlist -> NOT condition','conlist',2,'p_conlist','main.py',323),
  ('conlist -> condition AND condition','conlist',3,'p_conlist','main.py',324),
  ('conlist -> condition OR condition','conlist',3,'p_conlist','main.py',325),
  ('conlist -> TEXT BETWEEN number AND number','conlist',5,'p_conlist','main.py',326),
  ('conlist -> TEXT IN LPAR select RPAR','conlist',5,'p_conlist','main.py',327),
  ('texts -> TEXT','texts',1,'p_texts','main.py',332),
  ('texts -> texts TEXT','texts',2,'p_texts','main.py',333),
  ('value -> number','value',1,'p_value','main.py',345),
  ('value -> aggregate','value',1,'p_value','main.py',346),
  ('value -> PUNCTUATION texts PUNCTUATION','value',3,'p_value','main.py',347),
  ('condition -> column > value','condition',3,'p_condition','main.py',360),
  ('condition -> column < value','condition',3,'p_condition','main.py',361),
  ('condition -> column = value','condition',3,'p_condition','main.py',362),
  ('condition -> column > column','condition',3,'p_condition','main.py',363),
  ('condition -> column < column','condition',3,'p_condition','main.py',364),
  ('condition -> column = column','condition',3,'p_condition','main.py',365),
  ('number -> int','number',1,'p_number','main.py',374),
  ('number -> double','number',1,'p_number','main.py',375),
  ('int -> INTEGER','int',1,'p_int','main.py',379),
  ('double -> DOUBLE','double',1,'p_double','main.py',384),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','main.py',388),
  ('expressions -> expression','expressions',1,'p_expressions','main.py',389),
  ('expression -> expression + value','expression',3,'p_expression','main.py',401),
  ('expression -> expression - value','expression',3,'p_expression','main.py',402),
  ('expression -> value','expression',1,'p_expression','main.py',403),
]
