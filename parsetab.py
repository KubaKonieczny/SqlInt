
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND AS AVG BETWEEN BY COMMA COUNT DELETE DOT DOUBLE FROM IN INSERT INTEGER INTO LPAR MAX MIN NAME NOT OR ORDER PUNCTUATION RPAR SELECT SET SUM TEXT UPDATE VALUES WHEREquery : select\n            | update\n            | insert\n            | deleteupdate : UPDATE table SET column '=' expression\n                | UPDATE table SET column '=' expression WHERE conlist\n                insert : INSERT INTO table VALUES LPAR expressions RPAR\n                | INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPARdelete : DELETE FROM tables\n                | DELETE FROM tables WHERE conlist select : SELECT columns FROM tables WHERE conlist ORDER BY columns\n                | SELECT columns FROM tables WHERE conlist\n                | SELECT columns FROM tables ORDER BY columns\n                | SELECT columns FROM tables\n                | SELECT expression\n                | SELECT expression FROM tables columns : columns COMMA column\n                | column\n                 column :  '*'\n                | NAME\n                | NAME DOT NAME\n                 aggregate : SUM LPAR TEXT RPAR\n                    | AVG LPAR TEXT RPAR\n                    | MAX LPAR TEXT RPAR\n                    | MIN LPAR TEXT RPAR\n                    | COUNT LPAR TEXT RPAR tables : table\n            | tables COMMA table table : NAME\n            | NAME AS NAME\n             conlist : condition\n                | NOT condition\n                | condition AND condition\n                | condition OR condition\n                | NAME BETWEEN number AND number\n                | NAME IN LPAR select RPAR\n                  value :  number\n                | aggregate\n                | TEXT   condition : column '>' value\n                  | column '<' value\n                  | column '=' value\n                  | column '>' column\n                  | column '<' column\n                  | column '=' column\n                    number : int\n                | double int : INTEGERdouble : DOUBLE expressions : expressions COMMA expression\n                | expression expression : expression '+' value\n                   | expression '-' value\n                   | value "
    
_lr_action_items = {'SELECT':([0,104,],[6,6,]),'UPDATE':([0,],[7,]),'INSERT':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,11,12,13,14,15,16,17,18,19,20,26,27,29,46,47,48,49,50,51,52,53,60,67,68,69,70,71,75,76,80,81,83,89,96,98,101,102,105,106,107,108,109,110,112,117,119,120,121,],[0,-1,-2,-3,-4,-15,-18,-54,-19,-20,-37,-38,-39,-46,-47,-48,-49,-29,-9,-27,-14,-17,-16,-52,-53,-21,-30,-22,-23,-24,-25,-26,-10,-31,-28,-12,-5,-32,-13,-7,-33,-34,-43,-40,-44,-41,-45,-42,-6,-11,-35,-36,-8,]),'*':([6,33,43,62,63,65,77,82,87,88,92,93,94,97,111,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NAME':([6,7,30,31,32,33,34,37,43,44,62,63,64,65,77,82,87,88,92,93,94,97,111,],[15,29,29,29,29,15,29,53,15,60,15,78,29,78,15,15,15,15,15,15,15,78,15,]),'TEXT':([6,35,36,38,39,40,41,42,72,73,92,93,94,99,114,],[18,18,18,54,55,56,57,58,18,18,18,18,18,18,18,]),'SUM':([6,35,36,72,73,92,93,94,99,114,],[21,21,21,21,21,21,21,21,21,21,]),'AVG':([6,35,36,72,73,92,93,94,99,114,],[22,22,22,22,22,22,22,22,22,22,]),'MAX':([6,35,36,72,73,92,93,94,99,114,],[23,23,23,23,23,23,23,23,23,23,]),'MIN':([6,35,36,72,73,92,93,94,99,114,],[24,24,24,24,24,24,24,24,24,24,]),'COUNT':([6,35,36,72,73,92,93,94,99,114,],[25,25,25,25,25,25,25,25,25,25,]),'INTEGER':([6,35,36,72,73,90,92,93,94,99,114,115,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'DOUBLE':([6,35,36,72,73,90,92,93,94,99,114,115,],[27,27,27,27,27,27,27,27,27,27,27,27,]),'INTO':([8,],[30,]),'FROM':([9,10,11,12,13,14,15,16,17,18,19,20,26,27,49,51,52,53,67,68,69,70,71,],[31,32,34,-18,-54,-19,-20,-37,-38,-39,-46,-47,-48,-49,-17,-52,-53,-21,-22,-23,-24,-25,-26,]),'COMMA':([10,12,13,14,15,16,17,18,19,20,26,27,29,46,47,48,49,50,51,52,53,60,67,68,69,70,71,74,80,84,85,96,113,117,118,],[33,-18,-54,-19,-20,-37,-38,-39,-46,-47,-48,-49,-29,64,-27,64,-17,64,-52,-53,-21,-30,-22,-23,-24,-25,-26,33,-28,99,-51,33,-50,33,99,]),'RPAR':([11,12,13,14,15,16,17,18,19,20,26,27,29,47,48,49,50,51,52,53,54,55,56,57,58,60,67,68,69,70,71,74,76,80,81,84,85,89,96,101,102,105,106,107,108,109,110,113,116,117,118,119,120,],[-15,-18,-54,-19,-20,-37,-38,-39,-46,-47,-48,-49,-29,-27,-14,-17,-16,-52,-53,-21,67,68,69,70,71,-30,-22,-23,-24,-25,-26,86,-31,-28,-12,98,-51,-32,-13,-33,-34,-43,-40,-44,-41,-45,-42,-50,120,-11,121,-35,-36,]),'+':([11,13,16,17,18,19,20,26,27,51,52,67,68,69,70,71,83,85,113,],[35,-54,-37,-38,-39,-46,-47,-48,-49,-52,-53,-22,-23,-24,-25,-26,35,35,35,]),'-':([11,13,16,17,18,19,20,26,27,51,52,67,68,69,70,71,83,85,113,],[36,-54,-37,-38,-39,-46,-47,-48,-49,-52,-53,-22,-23,-24,-25,-26,36,36,36,]),'WHERE':([13,16,17,18,19,20,26,27,29,46,47,48,51,52,60,67,68,69,70,71,80,83,],[-54,-37,-38,-39,-46,-47,-48,-49,-29,63,-27,65,-52,-53,-30,-22,-23,-24,-25,-26,-28,97,]),'=':([14,15,53,59,78,79,],[-19,-20,-21,72,-20,94,]),'>':([14,15,53,78,79,],[-19,-20,-21,-20,92,]),'<':([14,15,53,78,79,],[-19,-20,-21,-20,93,]),'AND':([14,15,16,17,18,19,20,26,27,53,67,68,69,70,71,76,103,105,106,107,108,109,110,],[-19,-20,-37,-38,-39,-46,-47,-48,-49,-21,-22,-23,-24,-25,-26,87,115,-43,-40,-44,-41,-45,-42,]),'OR':([14,15,16,17,18,19,20,26,27,53,67,68,69,70,71,76,105,106,107,108,109,110,],[-19,-20,-37,-38,-39,-46,-47,-48,-49,-21,-22,-23,-24,-25,-26,88,-43,-40,-44,-41,-45,-42,]),'ORDER':([14,15,16,17,18,19,20,26,27,29,47,48,53,60,67,68,69,70,71,76,80,81,89,101,102,105,106,107,108,109,110,119,120,],[-19,-20,-37,-38,-39,-46,-47,-48,-49,-29,-27,66,-21,-30,-22,-23,-24,-25,-26,-31,-28,95,-32,-33,-34,-43,-40,-44,-41,-45,-42,-35,-36,]),'DOT':([15,78,],[37,37,]),'LPAR':([21,22,23,24,25,29,45,60,61,91,100,],[38,39,40,41,42,-29,62,-30,73,104,114,]),'SET':([28,29,60,],[43,-29,-30,]),'VALUES':([29,45,60,86,],[-29,61,-30,100,]),'AS':([29,],[44,]),'NOT':([63,65,97,],[77,77,77,]),'BY':([66,95,],[82,111,]),'BETWEEN':([78,],[90,]),'IN':([78,],[91,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'select':([0,104,],[2,116,]),'update':([0,],[3,]),'insert':([0,],[4,]),'delete':([0,],[5,]),'columns':([6,62,82,111,],[10,74,96,117,]),'expression':([6,72,73,99,114,],[11,83,85,113,85,]),'column':([6,33,43,62,63,65,77,82,87,88,92,93,94,97,111,],[12,49,59,12,79,79,79,12,79,79,105,107,109,79,12,]),'value':([6,35,36,72,73,92,93,94,99,114,],[13,51,52,13,13,106,108,110,13,13,]),'number':([6,35,36,72,73,90,92,93,94,99,114,115,],[16,16,16,16,16,103,16,16,16,16,16,119,]),'aggregate':([6,35,36,72,73,92,93,94,99,114,],[17,17,17,17,17,17,17,17,17,17,]),'int':([6,35,36,72,73,90,92,93,94,99,114,115,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'double':([6,35,36,72,73,90,92,93,94,99,114,115,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'table':([7,30,31,32,34,64,],[28,45,47,47,47,80,]),'tables':([31,32,34,],[46,48,50,]),'conlist':([63,65,97,],[75,81,112,]),'condition':([63,65,77,87,88,97,],[76,76,89,101,102,76,]),'expressions':([73,114,],[84,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> select','query',1,'p_query','main.py',221),
  ('query -> update','query',1,'p_query','main.py',222),
  ('query -> insert','query',1,'p_query','main.py',223),
  ('query -> delete','query',1,'p_query','main.py',224),
  ('update -> UPDATE table SET column = expression','update',6,'p_update','main.py',228),
  ('update -> UPDATE table SET column = expression WHERE conlist','update',8,'p_update','main.py',229),
  ('insert -> INSERT INTO table VALUES LPAR expressions RPAR','insert',7,'p_insert','main.py',242),
  ('insert -> INSERT INTO table LPAR columns RPAR VALUES LPAR expressions RPAR','insert',10,'p_insert','main.py',243),
  ('delete -> DELETE FROM tables','delete',3,'p_delete','main.py',258),
  ('delete -> DELETE FROM tables WHERE conlist','delete',5,'p_delete','main.py',259),
  ('select -> SELECT columns FROM tables WHERE conlist ORDER BY columns','select',9,'p_select','main.py',270),
  ('select -> SELECT columns FROM tables WHERE conlist','select',6,'p_select','main.py',271),
  ('select -> SELECT columns FROM tables ORDER BY columns','select',7,'p_select','main.py',272),
  ('select -> SELECT columns FROM tables','select',4,'p_select','main.py',273),
  ('select -> SELECT expression','select',2,'p_select','main.py',274),
  ('select -> SELECT expression FROM tables','select',4,'p_select','main.py',275),
  ('columns -> columns COMMA column','columns',3,'p_columns','main.py',301),
  ('columns -> column','columns',1,'p_columns','main.py',302),
  ('column -> *','column',1,'p_column','main.py',315),
  ('column -> NAME','column',1,'p_column','main.py',316),
  ('column -> NAME DOT NAME','column',3,'p_column','main.py',317),
  ('aggregate -> SUM LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',326),
  ('aggregate -> AVG LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',327),
  ('aggregate -> MAX LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',328),
  ('aggregate -> MIN LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',329),
  ('aggregate -> COUNT LPAR TEXT RPAR','aggregate',4,'p_aggregate','main.py',330),
  ('tables -> table','tables',1,'p_tables','main.py',334),
  ('tables -> tables COMMA table','tables',3,'p_tables','main.py',335),
  ('table -> NAME','table',1,'p_table','main.py',348),
  ('table -> NAME AS NAME','table',3,'p_table','main.py',349),
  ('conlist -> condition','conlist',1,'p_conlist','main.py',355),
  ('conlist -> NOT condition','conlist',2,'p_conlist','main.py',356),
  ('conlist -> condition AND condition','conlist',3,'p_conlist','main.py',357),
  ('conlist -> condition OR condition','conlist',3,'p_conlist','main.py',358),
  ('conlist -> NAME BETWEEN number AND number','conlist',5,'p_conlist','main.py',359),
  ('conlist -> NAME IN LPAR select RPAR','conlist',5,'p_conlist','main.py',360),
  ('value -> number','value',1,'p_value','main.py',378),
  ('value -> aggregate','value',1,'p_value','main.py',379),
  ('value -> TEXT','value',1,'p_value','main.py',380),
  ('condition -> column > value','condition',3,'p_condition','main.py',391),
  ('condition -> column < value','condition',3,'p_condition','main.py',392),
  ('condition -> column = value','condition',3,'p_condition','main.py',393),
  ('condition -> column > column','condition',3,'p_condition','main.py',394),
  ('condition -> column < column','condition',3,'p_condition','main.py',395),
  ('condition -> column = column','condition',3,'p_condition','main.py',396),
  ('number -> int','number',1,'p_number','main.py',405),
  ('number -> double','number',1,'p_number','main.py',406),
  ('int -> INTEGER','int',1,'p_int','main.py',409),
  ('double -> DOUBLE','double',1,'p_double','main.py',414),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','main.py',418),
  ('expressions -> expression','expressions',1,'p_expressions','main.py',419),
  ('expression -> expression + value','expression',3,'p_expression','main.py',431),
  ('expression -> expression - value','expression',3,'p_expression','main.py',432),
  ('expression -> value','expression',1,'p_expression','main.py',433),
]
